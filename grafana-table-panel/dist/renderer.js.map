{"version":3,"sources":["../src/renderer.js"],"names":["_","moment","kbn","TableRenderer","panel","table","isUtc","sanitize","initColumns","formatters","colorState","colIndex","columns","length","column","title","text","i","styles","style","regex","stringToJsRegex","pattern","match","alias","replace","createColumnFormatter","value","thresholds","colors","first","v","undefined","isArray","join","escape","defaultCellFormatter","type","date","utc","format","dateFormat","valueFormatter","valueFormats","unit","isString","colorMode","getColorForValue","decimals","percentageReg","reg","test","str","REG","regLength","exec","columnIndex","addWidthHack","formatColumnValue","point","cell","statePoint","widthHack","hidden","page","pageSize","startPos","endPos","Math","min","rows","html","y","row","cellHtml","rowStyle","renderCell","new_row","push"],"mappings":"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","file":"renderer.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport kbn from 'app/core/utils/kbn';\n\nexport class TableRenderer {\n\n  constructor(panel, table, isUtc, sanitize) {\n    this.panel = panel;\n    this.table = table;\n    this.isUtc = isUtc;\n    this.sanitize = sanitize;\n\n    this.initColumns();\n  }\n\n  setTable(table) {\n    this.table = table;\n\n    this.initColumns();\n  }\n\n  initColumns() {\n    this.formatters = [];\n    this.colorState = {};\n\n    for (let colIndex = 0; colIndex < this.table.columns.length; colIndex++) {\n      let column = this.table.columns[colIndex];\n      column.title = column.text;\n\n      for (let i = 0; i < this.panel.styles.length; i++) {\n        let style = this.panel.styles[i];\n\n        var regex = kbn.stringToJsRegex(style.pattern);\n        if (column.text.match(regex)) {\n          column.style = style;\n\n          if (style.alias) {\n            column.title = column.text.replace(regex, style.alias);\n          }\n\n          break;\n        }\n      }\n\n      this.formatters[colIndex] = this.createColumnFormatter(column);\n    }\n  }\n\n  getColorForValue(value, style) {\n    if (!style.thresholds) { return null; }\n\n    for (var i = style.thresholds.length; i > 0; i--) {\n      if (value >= style.thresholds[i - 1]) {\n        return style.colors[i];\n      }\n    }\n    return _.first(style.colors);\n  }\n\n  defaultCellFormatter(v, style) {\n    if (v === null || v === void 0 || v === undefined) {\n      return '';\n    }\n\n    if (_.isArray(v)) {\n      v = v.join(', ');\n    }\n\n    if (style && style.sanitize) {\n      return this.sanitize(v);\n    } else {\n      return _.escape(v);\n    }\n  }\n\n  createColumnFormatter(column) {\n    if (!column.style) {\n      return this.defaultCellFormatter;\n    }\n\n    if (column.style.type === 'hidden') {\n      return v => {\n        return undefined;\n      };\n    }\n\n    if (column.style.type === 'date') {\n      return v => {\n        if (v === undefined || v === null) {\n          return '-';\n        }\n\n        if (_.isArray(v)) { v = v[0]; }\n        var date = moment(v);\n        if (this.isUtc) {\n          date = date.utc();\n        }\n        return date.format(column.style.dateFormat);\n      };\n    }\n\n    if (column.style.type === 'number') {\n      let valueFormatter = kbn.valueFormats[column.unit || column.style.unit];\n\n      return v =>  {\n        if (v === null || v === void 0) {\n          return '-';\n        }\n\n        if (_.isString(v)) {\n          return this.defaultCellFormatter(v, column.style);\n        }\n\n        if (column.style.colorMode) {\n          this.colorState[column.style.colorMode] = this.getColorForValue(v, column.style);\n        }\n\n        return valueFormatter(v, column.style.decimals, null);\n      };\n    }\n    \n    if (column.style.type === 'percentage') {\n      //　过滤\n      const percentageReg = /%/;\n      const reg = /(\\d+(\\.\\d+)?\\%)([^\\.\\%]*[^\\d\\.\\%])?/g;\n      return v => {\n        if (v === null || v === void 0 || v === undefined) {\n          return '';\n        }\n        if (_.isArray(v)) {\n          v = v.join('<br>');\n        }\n        if (percentageReg.test(v)) {\n          let str = '';\n          let REG = [];\n          let regLength = v.match(reg).length;\n          for (let i = 0; i < regLength; i++) {\n            REG = reg.exec(v);\n            str += '<div class=\"table-panel-percentage\"><span class=\"table-panel-bar\"><span style=\"width:' + REG[1] + '\"></span></span>' + REG[1];\n            str += REG[3]?' ' + REG[3]:'';\n            str += \"</div>\";\n          }\n          return str;\n        } else {\n          return this.defaultCellFormatter(v, column.style);\n        }\n      };\n    }\n\n    return (value) => {\n      return this.defaultCellFormatter(value, column.style);\n    };\n  }\n\n  formatColumnValue(colIndex, value) {\n    return this.formatters[colIndex] ? this.formatters[colIndex](value) : value;\n  }\n\n  renderCell(columnIndex, value, addWidthHack = false) {\n    value = this.formatColumnValue(columnIndex, value);\n    var style = '',\n        point = '';\n    if (this.colorState.cell) {\n      style = ' style=\"background-color:' + this.colorState.cell + ';color: white\"';\n      this.colorState.cell = null;\n    } else if (this.colorState.value) {\n      style = ' style=\"color:' + this.colorState.value + '\"';\n      this.colorState.value = null;\n    } else if (this.colorState.statePoint) {\n      point = '<span class=\"state-point\" style=\"background:' + this.colorState.statePoint + '\"></span>';\n      this.colorState.statePoint = null;\n    }\n\n    // because of the fixed table headers css only solution\n    // there is an issue if header cell is wider the cell\n    // this hack adds header content to cell (not visible)\n    var widthHack = '';\n    if (addWidthHack) {\n      widthHack = '<div class=\"table-panel-width-hack\">' + this.table.columns[columnIndex].title + '</div>';\n    }\n\n    if (value === undefined) {\n      style = ' style=\"display:none;\"';\n      this.table.columns[columnIndex].hidden = true;\n    } else {\n      this.table.columns[columnIndex].hidden = false;\n    }\n\n    return '<td' + style + '>' + point + value + widthHack + '</td>';\n  }\n\n  render(page) {\n    let pageSize = this.panel.pageSize || 100;\n    let startPos = page * pageSize;\n    let endPos = Math.min(startPos + pageSize, this.table.rows.length);\n    var html = \"\";\n\n    for (var y = startPos; y < endPos; y++) {\n      let row = this.table.rows[y];\n      let cellHtml = '';\n      let rowStyle = '';\n      for (var i = 0; i < this.table.columns.length; i++) {\n        cellHtml += this.renderCell(i, row[i], y === startPos);\n      }\n\n      if (this.colorState.row) {\n        rowStyle = ' style=\"background-color:' + this.colorState.row + ';color: white\"';\n        this.colorState.row = null;\n      }\n\n      html += '<tr ' + rowStyle + '>' + cellHtml + '</tr>';\n    }\n\n    return html;\n  }\n\n  render_values() {\n    let rows = [];\n\n    for (var y = 0; y < this.table.rows.length; y++) {\n      let row = this.table.rows[y];\n      let new_row = [];\n      for (var i = 0; i < this.table.columns.length; i++) {\n        new_row.push(this.formatColumnValue(i, row[i]));\n      }\n      rows.push(new_row);\n    }\n    return {\n        columns: this.table.columns,\n        rows: rows,\n    };\n  }\n}\n"]}