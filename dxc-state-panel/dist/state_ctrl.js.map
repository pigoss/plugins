{"version":3,"sources":["../src/state_ctrl.js"],"names":["_","MetricsPanelCtrl","panelDefaults","bgColor","StateCtrl","$scope","$injector","defaultsDeep","panel","events","on","onDataReceived","bind","onDataError","onInitEditMode","render","data","datajson","dataList","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"state_ctrl.js","sourcesContent":["import _ from 'lodash';\r\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\r\nimport './css/state-panel.css!';\r\n\r\nconst panelDefaults = {\r\n  // IS_POINT: true,\r\n  // url: '',\r\n  // request: '',\r\n  // updateInterval: 10000,\r\n  bgColor: [\r\n    'linear-gradient(to bottom right, #3abac7, #a375b6)',\r\n    'linear-gradient(to bottom right, #fcd98d, #f3b65b)',\r\n    'linear-gradient(to bottom right, #ffb88c, #e5658f)'\r\n  \r\n    // ],\r\n    // stateColor: [\r\n    //   \"linear-gradient(to bottom right, #4acda5, #3f74c6)\",\r\n    //   \"linear-gradient(to bottom right, #3abac7, #a375b6)\",\r\n    //   \"linear-gradient(to bottom right, #ffb88c, #e5658f)\"\r\n  ],\r\n };\r\n\r\nexport class StateCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector) {\r\n    super($scope, $injector);\r\n\r\n    _.defaultsDeep(this.panel, panelDefaults);\r\n\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-error', this.onDataError.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n\r\n    // this.update();\r\n  }\r\n\r\n  onDataError() {\r\n    this.render();\r\n  }\r\n\r\n  onDataReceived(data) {\r\n    var datajson = [{ 'name': '兖矿电邮', 'state': '1' },{ 'name': '人力资源', 'state': '2' },{ 'name': '兖矿OA', 'state': '0' },{ 'name': '全面预算系统', 'state': '0' },{ 'name': '内部市场化系统', 'state': '0' },{ 'name': '呼叫中心', 'state': '0' },{ 'name': '地测部GIS', 'state': '0' },{ 'name': '基建PMIS', 'state': '0' },{ 'name': '安监局安全信息联网', 'state': '0' },{ 'name': '实时数据联网', 'state': '1' },{ 'name': '审计系统', 'state': '2' },{ 'name': '总院PACS', 'state': '1' },{ 'name': '煤业资金', 'state': '0' },{ 'name': '煤化工能源管控', 'state': '0' },{ 'name': '物资商城', 'state': '0' },{ 'name': '环保节能系统', 'state': '1' },{ 'name': '短信平台', 'state': '2' },{ 'name': '矿井微震联网系统', 'state': '0' },{ 'name': '纪委网上举报', 'state': '1' },{ 'name': '综合调度管理信息系统', 'state': '0' },{ 'name': '综合运营', 'state': '0' },{ 'name': '考勤', 'state': '0' },{ 'name': '矿井微震联网系统', 'state': '0' },{ 'name': '计划生育', 'state': '0' },{ 'name': '集团风险管理', 'state': '0' }];\r\n\r\n    if (data[0]) {\r\n      if (data[0].dataList) {\r\n        this.dataList = data[0].dataList;\r\n      } else {\r\n        this.dataList =datajson  }\r\n    } else {\r\n      this.dataList = datajson    }\r\n    // this.transform(this.dataList);\r\n    this.render();\r\n  }\r\n\r\n  // transform(dataList) {\r\n  //   const that = this;\r\n  //   dataList.map(item => {\r\n  //     item.bgColor = that.panel.bgColor[item.state % 3];\r\n  //     // item.stateColor = that.panel.stateColor[item.state%3];\r\n  //   });\r\n  // }\r\n\r\n  // post请求\r\n  // update() {\r\n  //   let that = this, xmlhttp;\r\n\r\n  //   if (window.XMLHttpRequest) {\r\n  //     xmlhttp = new XMLHttpRequest();\r\n  //   } else {\r\n  //     xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n  //   }\r\n\r\n  //   xmlhttp.onreadystatechange = function () {\r\n  //     if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n  //       that.dataList = JSON.parse(xmlhttp.responseText).dataList;\r\n  //       that.render();\r\n  //     } \r\n  //   }\r\n\r\n  //   if (that.panel.url && that.panel.request) {\r\n  //     xmlhttp.open(\"POST\", that.panel.url, true);\r\n  //     xmlhttp.send(that.panel.request);\r\n  //   }\r\n\r\n  //   this.$timeout(() => { this.update(); }, that.panel.updateInterval);\r\n  // }\r\n\r\n  onInitEditMode() {\r\n    // this.addEditorTab('Options', 'public/plugins/grafana-state-panel/editor.html', 2);\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    this.events.on('render', () => {\r\n      // const $panelContainer = elem.find('.list-container');\r\n    });\r\n  }\r\n}\r\n\r\nStateCtrl.templateUrl = 'module.html';\r\n"]}