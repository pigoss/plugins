{"version":3,"sources":["../src/diagramControl.js"],"names":["getColorForValue","data","value","console","info","debug","i","thresholds","length","colorMap","_","first","getColorByXPercentage","canvas","xPercent","x","width","context","getContext","p","getImageData","color","TimeSeries","kbn","MetricsPanelCtrl","diagramEditor","displayEditor","compositeEditor","panelDefaults","composites","seriesOverrides","decimals","colors","legend","show","min","max","avg","current","total","gradient","enabled","maxDataPoints","mappingType","maxWidth","nullPointMode","format","valueName","valueOptions","valueMaps","op","text","content","init","logLevel","cloneCssStyles","startOnLoad","arrowMarkerAbsolute","flowchart","htmlLabels","useMaxWidth","sequenceDiagram","diagramMarginX","diagramMarginY","actorMargin","height","boxMargin","boxTextMargin","noteMargin","messageMargin","mirrorActors","bottomMarginAdj","gantt","titleTopMargin","barHeight","barGap","topPadding","leftPadding","gridLineStartPadding","fontSize","fontFamily","numberSectionStyles","DiagramCtrl","$scope","$injector","$sce","defaults","panel","graphId","id","containerDivId","events","on","onInitEditMode","bind","onDataReceived","unitFormats","getUnitFormats","initializeMermaid","mermaidAPI","initialize","parseError","handleParseError","err","hash","error","errorText","trustAsHtml","addEditorTab","$","document","getElementById","dataList","series","map","seriesHandler","setValues","updateDiagram","svgData","render","seriesData","datapoints","alias","target","replace","unit","flotpairs","getFlotPairs","override","push","without","composite","ctrl","metrics","undefined","metric","thresholdCount","colorCount","refresh","colorIndex","splice","subItem","remove","svg","clearDiagram","graphDefinition","substituteHashPrefixedNotation","templateSrv","replaceWithText","diagramType","detectType","diagramContainer","renderCallback","svgCode","bindFunctions","html","matches","match","aMatch","valueType","substring","j","aComposite","name","displayedValue","valueRawFormattedWithPrefix","valueFormatted","valueFormattedWithPrefix","k","seriesItem","applyOverrides","lastPoint","last","lastValue","isArray","valueRounded","valueFormated","isString","escape","stats","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","scaledDecimals","roundValue","getGradientForValue","colorData","currentWorstSeries","currentWorstSeriesName","aMetric","seriesName","getWorstSeries","series1","series2","worstSeries","series1thresholdLevel","getThesholdLevel","series2thresholdLevel","log","thresholdLevel","Math","apply","absoluteDistance","valueDistanceFromMin","invertColors","seriesItemAlias","overrides","regex","stringToJsRegex","split","strVale","Number","trim","slice","reverse","unitFormat","isNumber","delta","dec","floor","LN10","magn","pow","norm","size","result","scope","elem","attrs","diagramElement","find","append","css","gradientValueMax","gradientValueMin","setElementHeight","updateCanvasStyle","updateStyle","clientWidth","canvasContext","clearRect","grd","createLinearGradient","colorWidth","currentColor","addColorStop","fillStyle","fillRect","innerText","renderingCompleted","key","targetElement","d3","select","div","fo","attr","style","br","classed","filter","parents","edgeElement","parent","addClass","dElement","warn","templateUrl"],"mappings":"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","file":"diagramControl.js","sourcesContent":["import './libs/mermaid/dist/mermaidAPI';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\r\nimport { diagramEditor, displayEditor, compositeEditor } from './properties';\r\nimport _ from 'lodash';\r\nimport './series_overrides_diagram_ctrl';\r\nimport './css/diagram.css!';\r\n\r\nconst panelDefaults = {\r\n\tcomposites: [],\r\n\t// other style overrides\r\n\tseriesOverrides: [],\r\n\tthresholds: '0,10',\r\n\tdecimals: 2, // decimal precision\r\n\tcolors: ['rgba(50, 172, 45, 0.97)', 'rgba(237, 129, 40, 0.89)', 'rgba(245, 54, 54, 0.9)'],\r\n\tlegend: {\r\n\t\tshow: true,\r\n\t\tmin: true,\r\n\t\tmax: true,\r\n\t\tavg: true,\r\n\t\tcurrent: true,\r\n\t\ttotal: true,\r\n\t\tgradient: {\r\n\t\t\tenabled: true,\r\n\t\t\tshow: true\r\n\t\t}\r\n\t},\r\n\tmaxDataPoints: 100,\r\n\tmappingType: 1,\r\n\tmaxWidth: false,\r\n\tnullPointMode: 'connected',\r\n\tformat: 'none',\r\n\tvalueName: 'avg',\r\n\tvalueOptions: ['avg', 'min', 'max', 'total', 'current'],\r\n\tvalueMaps: [\r\n\t\t{ value: 'null', op: '=', text: 'N/A' }\r\n\t],\r\n\tcontent: 'graph LR\\n' +\r\n\t'A[Square Rect] -- Link text --> B((Circle))\\n' +\r\n\t'A --> C(Round Rect)\\n' +\r\n\t'B --> D{Rhombus}\\n' +\r\n\t'C --> D\\n',\r\n\tinit: {\r\n\t\tlogLevel: 3, //1:debug, 2:info, 3:warn, 4:error, 5:fatal\r\n\t\tcloneCssStyles: false, // - This options controls whether or not the css rules should be copied into the generated svg\r\n\t\tstartOnLoad: false, // - This options controls whether or mermaid starts when the page loads\r\n\t\tarrowMarkerAbsolute: true, // - This options controls whether or arrow markers in html code will be absolute paths or an anchor, #. This matters if you are using base tag settings.\r\n\t\tflowchart: {\r\n\t\t\thtmlLabels: true,\r\n\t\t\tuseMaxWidth: true\r\n\t\t},\r\n\t\tsequenceDiagram: {\r\n\t\t\tdiagramMarginX: 50, // - margin to the right and left of the sequence diagram\r\n\t\t\tdiagramMarginY: 10, // - margin to the over and under the sequence diagram\r\n\t\t\tactorMargin: 50, // - Margin between actors\r\n\t\t\twidth: 150, // - Width of actor boxes\r\n\t\t\theight: 65, // - Height of actor boxes00000000001111\r\n\t\t\tboxMargin: 10, // - Margin around l01oop boxes\r\n\t\t\tboxTextMargin: 5, // - margin around the text in loop/alt/opt boxes\r\n\t\t\tnoteMargin: 10, // - margin around notes\r\n\t\t\tmessageMargin: 35, // - Space between messages\r\n\t\t\tmirrorActors: true, // - mirror actors under diagram\r\n\t\t\tbottomMarginAdj: 1, // - Depending on css styling this might need adjustment. Prolongs the edge of the diagram downwards\r\n\t\t\tuseMaxWidth: true, // - when this flag is set the height and width is set to 100% and is then scaling with the available space if not the absolute space required is used\r\n\t\t},\r\n\t\tgantt: {\r\n\t\t\ttitleTopMargin: 25, // - margin top for the text over the gantt diagram\r\n\t\t\tbarHeight: 20, // - the height of the bars in the graph\r\n\t\t\tbarGap: 4, // - the margin between the different activities in the gantt diagram\r\n\t\t\ttopPadding: 50, // - margin between title and gantt diagram and between axis and gantt diagram.\r\n\t\t\tleftPadding: 75, // - the space allocated for the section name to the left of the activities.\r\n\t\t\tgridLineStartPadding: 35, // - Vertical starting position of the grid lines\r\n\t\t\tfontSize: 11, // - font size ...\r\n\t\t\tfontFamily: '\"Open-Sans\", \"sans-serif\"', // - font family ...\r\n\t\t\tnumberSectionStyles: 3, // - the number of alternating section styles\r\n\t\t\t/** axisFormatter: // - formatting of the axis, this might need adjustment to match your locale and preferences\r\n\t\t\t\t[\r\n\t\t        // Within a day\r\n\t\t        ['%I:%M', function (d) {\r\n\t\t            return d.getHours();\r\n\t\t        }],\r\n\t\t        // Monday a week\r\n\t\t        ['w. %U', function (d) {\r\n\t\t            return d.getDay() == 1;\r\n\t\t        }],\r\n\t\t        // Day within a week (not monday)\r\n\t\t        ['%a %d', function (d) {\r\n\t\t            return d.getDay() && d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // within a month\r\n\t\t        ['%b %d', function (d) {\r\n\t\t            return d.getDate() != 1;\r\n\t\t        }],\r\n\t\t        // Month\r\n\t\t        ['%m-%y', function (d) {\r\n\t\t            return d.getMonth();\r\n\t\t        }]] **/\r\n\t\t},\r\n\t\t//classDiagram: {},\r\n\t\t//info: {}\r\n\t}\r\n};\r\n\r\nclass DiagramCtrl extends MetricsPanelCtrl {\r\n\tconstructor($scope, $injector, $sce) {\r\n\t\tsuper($scope, $injector);\r\n\t\t_.defaults(this.panel, panelDefaults);\r\n\r\n\t\tthis.panel.graphId = 'diagram_' + this.panel.id;\r\n\t\tthis.containerDivId = 'container_' + this.panel.graphId;\r\n\t\tthis.$sce = $sce;\r\n\t\tthis.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n\t\tthis.events.on('data-received', this.onDataReceived.bind(this));\r\n\t\tthis.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n\t\tthis.unitFormats = kbn.getUnitFormats();\r\n\t\tthis.initializeMermaid();\r\n\t}\r\n\r\n\tinitializeMermaid() {\r\n\t\tmermaidAPI.initialize(this.panel.init);\r\n\t\tmermaidAPI.parseError = this.handleParseError.bind(this);\r\n\t}\r\n\r\n\thandleParseError(err, hash) {\r\n\t\tthis.error = 'Failed to parse diagram definition';\r\n\t\tthis.errorText = this.$sce.trustAsHtml('<p>Diagram Definition:</p><pre>' + err + '</pre>');\r\n\t}\r\n\r\n\tonInitEditMode() {\r\n\t\tthis.addEditorTab('Diagram', diagramEditor, 2);\r\n\t\tthis.addEditorTab('Display', displayEditor, 3);\r\n\t\tthis.addEditorTab('Metric Composites', compositeEditor, 4);\r\n\t}\r\n\r\n\tgetDiagramContainer() {\r\n\t\treturn $(document.getElementById(this.containerDivId));\r\n\t}\r\n\r\n\tonDataReceived(dataList) {\r\n\t\tconsole.info('received data');\r\n\t\tconsole.debug(dataList);\r\n\t\tthis.series = dataList.map(this.seriesHandler.bind(this));\r\n\t\tconsole.info('mapped dataList to series');\r\n\t\tconsole.debug(this.series);\r\n\r\n\t\tvar data = {};\r\n\t\tthis.setValues(data);\r\n\t\tthis.updateDiagram(data);\r\n\t\tthis.svgData = data;\r\n\t\tthis.render();\r\n\t}\r\n\r\n\tseriesHandler(seriesData) {\r\n\t\tvar series = new TimeSeries({\r\n\t\t\tdatapoints: seriesData.datapoints,\r\n\t\t\talias: seriesData.target.replace(/\"|,|;|=|:|{|}/g, '_'),\r\n\t\t\tunit: seriesData.unit\r\n\t\t});\r\n\t\tseries.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\r\n\t\treturn series;\r\n\t} // End seriesHandler()\r\n\r\n\taddSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides.push(override || {});\r\n\t}\r\n\r\n\tremoveSeriesOverride(override) {\r\n\t\tthis.panel.seriesOverrides = _.without(this.panel.seriesOverrides, override);\r\n\t\tthis.render();\r\n\t}\r\n\r\n\taddComposite(composite) {\r\n\t\tthis.panel.composites.push(composite || {});\r\n\t}\r\n\tremoveComposite(composite) {\r\n\t\tthis.panel.composites = _.without(this.panel.composites, composite);\r\n\t\tthis.render();\r\n\t}\r\n\tgetSeriesNamesForComposites() {\r\n\t\treturn _.map(this.$scope.ctrl.series, function (series) {\r\n\t\t\treturn series.alias;\r\n\t\t});\r\n\t}\r\n\r\n\taddMetricToComposite(composite) {\r\n\t\tif (composite.metrics === undefined) {\r\n\t\t\tcomposite.metrics = [{}];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcomposite.metrics.push({});\r\n\t\t}\r\n\t}\r\n\tremoveMetricFromComposite(composite, metric) {\r\n\t\tcomposite.metrics = _.without(composite.metrics, metric);\r\n\t}\r\n\r\n\tupdateThresholds() {\r\n\t\tvar thresholdCount = this.panel.thresholds.length;\r\n\t\tvar colorCount = this.panel.colors.length;\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\tchangeColor(colorIndex, color) {\r\n\t\tthis.panel.colors[colorIndex] = color;\r\n\t}\r\n\r\n\tremoveColor(colorIndex) {\r\n\t\tthis.panel.colors.splice(colorIndex, 1);\r\n\t}\r\n\r\n\taddColor() {\r\n\t\tthis.panel.colors.push('rgba(255, 255, 255, 1)');\r\n\t}\r\n\r\n\tsetUnitFormat(subItem) {\r\n\t\tthis.panel.format = subItem.value;\r\n\t\tthis.render();\r\n\t}\r\n\r\n\tclearDiagram() {\r\n\t\t$('#' + this.panel.graphId).remove();\r\n\t\tthis.svg = {};\r\n\t}\r\n\r\n\tupdateDiagram(data) {\r\n\t\tif (this.panel.content.length > 0) {\r\n\t\t\tthis.clearDiagram();\r\n\t\t\tvar graphDefinition = this.panel.content;\r\n\t\t\t// substitute values inside \"link text\"\r\n\t\t\t// this will look for any composite prefixed with a # and substitute the value of the composite\r\n\t\t\t// if a series alias is found, in the form #alias, the value will be substituted\r\n\t\t\t// this allows link values to be displayed based on the metric\r\n\t\t\tgraphDefinition = this.substituteHashPrefixedNotation(graphDefinition, data);\r\n\t\t\tgraphDefinition = this.templateSrv.replaceWithText(graphDefinition);\r\n\t\t\tthis.diagramType = mermaidAPI.detectType(graphDefinition);\r\n\t\t\tvar diagramContainer = $(document.getElementById(this.containerDivId));\r\n\r\n\t\t\tvar renderCallback = function (svgCode, bindFunctions) {\r\n\t\t\t\tif (svgCode === '') {\r\n\t\t\t\t\tdiagramContainer.html('There was a problem rendering the graph');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdiagramContainer.html(svgCode);\r\n\t\t\t\t\tbindFunctions(diagramContainer[0]);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t// if parsing the graph definition fails, the error handler will be called but the renderCallback() may also still be called.\r\n\t\t\tmermaidAPI.render(this.panel.graphId, graphDefinition, renderCallback);\r\n\t\t}\r\n\t} // End updateDiagram()\r\n\r\n  /**\r\n   * substitute values inside \"link text\"\r\n   * this will look for any composite prefixed with a #|!|@|& and substitute the value of the composite\r\n   * if a series alias is found, in the form #alias, the value will be substituted\r\n   * this allows link values to be displayed based on the metric\r\n   *\r\n   * Prefix Modifier For Composites\r\n   *   # Raw Value of Series\r\n   *   ! Raw Value plus Metric Name\r\n   *   @ Formatted (Decimal Limited and Unit Format)\r\n   *   & Formatted (Decimal Limited, Unit Format, and Metric Name)\r\n   *\r\n   * Prefix Modifier For Series\r\n   *   # Raw Value of Series\r\n   *   @ Formatted (Decimal Limited and Unit Format)\r\n   *\r\n   * @param  {[String]} graphDefinition [Content of Graph Definition Markdown]\r\n   * @param  {[Array]} data [Series Data]\r\n   * @return {[String]} [Modified Graph Definition]\r\n   */\r\n\tsubstituteHashPrefixedNotation(graphDefinition, data) {\r\n\t\t// inspect the string, locate all # prefixed items, and replace them with the value\r\n\t\t// of the series. If no matching series is found, leave it alone\r\n\t\tvar matches = graphDefinition.match(/(?:#|!|@|&)(\\w+)/g);\r\n\t\tif (matches === null) return graphDefinition;\r\n\t\t// check if there is a composite with a matching name\r\n\t\tfor (var i = 0; i < matches.length; i++) {\r\n\t\t\tvar aMatch = matches[i];\r\n\t\t\tvar valueType = aMatch[0];\r\n\t\t\taMatch = aMatch.substring(1);\r\n\t\t\t// check composites first\r\n\t\t\tfor (var j = 0; j < this.panel.composites.length; j++) {\r\n\t\t\t\tvar aComposite = this.panel.composites[j];\r\n\t\t\t\tif (aComposite.name === aMatch) {\r\n\t\t\t\t\t// found matching composite, get the valueFormatted\r\n\t\t\t\t\t//var displayedValue = data[aComposite.name].value;\r\n\t\t\t\t\tvar displayedValue = null;\r\n\t\t\t\t\tswitch (valueType) {\r\n\t\t\t\t\t\tcase '#':\r\n\t\t\t\t\t\t\tdisplayedValue = data[aComposite.name].value;\r\n\t\t\t\t\t\t\tgraphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase '!':\r\n\t\t\t\t\t\t\tdisplayedValue = data[aComposite.name].valueRawFormattedWithPrefix;\r\n\t\t\t\t\t\t\tgraphDefinition = graphDefinition.replace('!' + aMatch, displayedValue);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase '@':\r\n\t\t\t\t\t\t\tdisplayedValue = data[aComposite.name].valueFormatted;\r\n\t\t\t\t\t\t\tgraphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase '&':\r\n\t\t\t\t\t\t\tdisplayedValue = data[aComposite.name].valueFormattedWithPrefix;\r\n\t\t\t\t\t\t\tgraphDefinition = graphDefinition.replace('&' + aMatch, displayedValue);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// next check series\r\n\t\t\tfor (var k = 0; k < this.series.length; k++) {\r\n\t\t\t\tvar seriesItem = this.series[k];\r\n\t\t\t\tif (seriesItem.alias === aMatch) {\r\n\t\t\t\t\tvar displayedValue = null;\r\n\t\t\t\t\tswitch (valueType) {\r\n\t\t\t\t\t\tcase '#':\r\n\t\t\t\t\t\t\tdisplayedValue = data[seriesItem.alias].value;\r\n\t\t\t\t\t\t\tgraphDefinition = graphDefinition.replace('#' + aMatch, displayedValue);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase '@':\r\n\t\t\t\t\t\t\tdisplayedValue = data[seriesItem.alias].valueFormatted;\r\n\t\t\t\t\t\t\tgraphDefinition = graphDefinition.replace('@' + aMatch, displayedValue);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn graphDefinition;\r\n\t}\r\n\tsetValues(data) {\r\n\t\tif (this.series && this.series.length > 0) {\r\n\t\t\tfor (var i = 0; i < this.series.length; i++) {\r\n\t\t\t\tvar seriesItem = this.series[i];\r\n\t\t\t\tconsole.debug('setting values for series');\r\n\t\t\t\tconsole.debug(seriesItem);\r\n\t\t\t\tdata[seriesItem.alias] = this.applyOverrides(seriesItem.alias);\r\n\t\t\t\tvar lastPoint = _.last(seriesItem.datapoints);\r\n\t\t\t\tvar lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\r\n\r\n\t\t\t\tif (this.panel.valueName === 'name') {\r\n\t\t\t\t\tdata[seriesItem.alias].value = 0;\r\n\t\t\t\t\tdata[seriesItem.alias].valueRounded = 0;\r\n\t\t\t\t\tdata[seriesItem.alias].valueFormated = seriesItem.alias;\r\n\t\t\t\t} else if (_.isString(lastValue)) {\r\n\t\t\t\t\tdata[seriesItem.alias].value = 0;\r\n\t\t\t\t\tdata[seriesItem.alias].valueFormated = _.escape(lastValue);\r\n\t\t\t\t\tdata[seriesItem.alias].valueRounded = 0;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata[seriesItem.alias].value = seriesItem.stats[data[seriesItem.alias].valueName];\r\n\t\t\t\t\t//data[seriesItem.alias].flotpairs = seriesItem.flotpairs;\r\n\r\n\t\t\t\t\tvar decimalInfo = this.getDecimalsForValue(data[seriesItem.alias].value);\r\n\t\t\t\t\tvar formatFunc = kbn.valueFormats[data[seriesItem.alias].format];\r\n\t\t\t\t\t// put the value in quotes to escape \"most\" special characters\r\n\t\t\t\t\tdata[seriesItem.alias].valueFormatted = formatFunc(data[seriesItem.alias].value, decimalInfo.decimals, decimalInfo.scaledDecimals);\r\n\t\t\t\t\tdata[seriesItem.alias].valueRounded = kbn.roundValue(data[seriesItem.alias].value, decimalInfo.decimals);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.panel.legend.gradient.enabled) {\r\n\t\t\t\t\tdata[seriesItem.alias].color = this.getGradientForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdata[seriesItem.alias].color = getColorForValue(data[seriesItem.alias].colorData, data[seriesItem.alias].value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// now add the composites to data\r\n\t\tfor (var i = 0; i < this.panel.composites.length; i++) {\r\n\t\t\tvar aComposite = this.panel.composites[i];\r\n\t\t\tvar currentWorstSeries = null;\r\n\t\t\tvar currentWorstSeriesName = null;\r\n\t\t\tfor (var j = 0; j < aComposite.metrics.length; j++) {\r\n\t\t\t\t//debugger;\r\n\t\t\t\tvar aMetric = aComposite.metrics[j];\r\n\t\t\t\tvar seriesName = aMetric.seriesName;\r\n\t\t\t\tcurrentWorstSeriesName = aMetric.seriesName;\r\n\t\t\t\tvar seriesItem = data[seriesName];\r\n\t\t\t\t// check colorData thresholds\r\n\t\t\t\tif (currentWorstSeries === null) {\r\n\t\t\t\t\tcurrentWorstSeries = seriesItem;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcurrentWorstSeries = this.getWorstSeries(currentWorstSeries, seriesItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Prefix the valueFormatted with the actual metric name\r\n\t\t\tcurrentWorstSeries.valueFormattedWithPrefix = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\r\n\t\t\tcurrentWorstSeries.valueRawFormattedWithPrefix = currentWorstSeriesName + ': ' + currentWorstSeries.value;\r\n\t\t\tcurrentWorstSeries.valueFormatted = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\r\n\t\t\t// now push the composite into data\r\n\t\t\tdata[aComposite.name] = currentWorstSeries;\r\n\t\t}\r\n\t} // End setValues()\r\n\r\n\tgetWorstSeries(series1, series2) {\r\n\t\tvar worstSeries = series1;\r\n\t\tvar series1thresholdLevel = this.getThesholdLevel(series1);\r\n\t\tvar series2thresholdLevel = this.getThesholdLevel(series2);\r\n\t\tconsole.log(\"Series1 threhold level: \" + series1thresholdLevel);\r\n\t\tconsole.log(\"Series2 threhold level: \" + series2thresholdLevel);\r\n\t\tif (series2thresholdLevel > series1thresholdLevel) {\r\n\t\t\t// series2 has higher threshold violation\r\n\t\t\tworstSeries = series2;\r\n\t\t}\r\n\t\treturn worstSeries;\r\n\t}\r\n\r\n\t// returns level of threshold, 0 = ok, 1 = warnimg, 2 = critical\r\n\tgetThesholdLevel(series) {\r\n\t\t// default to ok\r\n\t\tvar thresholdLevel = 0;\r\n\t\tvar value = series.value;\r\n\t\tvar thresholds = series.colorData.thresholds;\r\n\t\t// if no thresholds are defined, return 0\r\n\t\tif (thresholds === undefined) {\r\n\t\t\treturn thresholdLevel;\r\n\t\t}\r\n\t\t// make sure thresholds is an array of size 2\r\n\t\tif (thresholds.length !== 2) {\r\n\t\t\treturn thresholdLevel;\r\n\t\t}\r\n\t\tif (value >= thresholds[0]) {\r\n\t\t\t// value is equal or greater than first threshold\r\n\t\t\tthresholdLevel = 1;\r\n\t\t}\r\n\t\tif (value >= thresholds[1]) {\r\n\t\t\t// value is equal or greater than second threshold\r\n\t\t\tthresholdLevel = 2;\r\n\t\t}\r\n\t\treturn thresholdLevel;\r\n\t}\r\n\r\n\tgetGradientForValue(data, value) {\r\n\t\tconsole.info('Getting gradient for value');\r\n\t\tconsole.debug(data);\r\n\t\tconsole.debug(value);\r\n\t\tvar min = Math.min.apply(Math, data.thresholds);\r\n\t\tvar max = Math.max.apply(Math, data.thresholds);\r\n\t\tvar absoluteDistance = max - min;\r\n\t\tvar valueDistanceFromMin = value - min;\r\n\t\tvar xPercent = valueDistanceFromMin / absoluteDistance;\r\n\t\t// Get the smaller number to clamp at 0.999 max\r\n\t\txPercent = Math.min(0.999, xPercent);\r\n\t\t// Get the larger number to clamp at 0.001 min\r\n\t\txPercent = Math.max(0.001, xPercent);\r\n\t\tif (data.invertColors) {\r\n\t\t\txPercent = 1 - xPercent;\r\n\t\t}\r\n\r\n\t\treturn getColorByXPercentage(this.canvas, xPercent);\r\n\t}\r\n\r\n\tapplyOverrides(seriesItemAlias) {\r\n\t\tvar seriesItem = {}, colorData = {}, overrides = {};\r\n\r\n\t\tconsole.info('applying overrides for seriesItem');\r\n\t\tconsole.debug(seriesItemAlias);\r\n\t\tconsole.debug(this.panel.seriesOverrides);\r\n\t\tfor (var i = 0; i <= this.panel.seriesOverrides.length; i++) {\r\n\t\t\tconsole.debug('comparing:');\r\n\t\t\tconsole.debug(this.panel.seriesOverrides[i]);\r\n\r\n\t\t\tif (this.panel.seriesOverrides[i]) {\r\n\t\t\t\tvar regex = kbn.stringToJsRegex(this.panel.seriesOverrides[i].alias);\r\n\t\t\t\tvar matches = seriesItemAlias.match(regex);\r\n\t\t\t\tif (matches && matches.length > 0) {\r\n\t\t\t\t\toverrides = this.panel.seriesOverrides[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcolorData.thresholds = (overrides.thresholds || this.panel.thresholds).split(',').map(function (strVale) {\r\n\t\t\treturn Number(strVale.trim());\r\n\t\t});\r\n\t\tcolorData.colorMap = this.panel.colors.slice();\r\n\t\tcolorData.invertColors = overrides.invertColors || false;\r\n\t\tif (colorData.invertColors) {\r\n\t\t\tcolorData.colorMap.reverse();\r\n\t\t}\r\n\t\tseriesItem.colorData = colorData;\r\n\r\n\t\tseriesItem.valueName = overrides.valueName || this.panel.valueName;\r\n\r\n\t\tseriesItem.format = overrides.unitFormat || this.panel.format;\r\n\t\treturn seriesItem;\r\n\t}\r\n\r\n\tinvertColorOrder() {\r\n\t\tthis.panel.colors.reverse();\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\tgetDecimalsForValue(value) {\r\n\t\t//debugger;\r\n\t\tif (_.isNumber(this.panel.decimals)) {\r\n\t\t\treturn { decimals: this.panel.decimals, scaledDecimals: null };\r\n\t\t}\r\n\r\n\t\tvar delta = value / 2;\r\n\t\tvar dec = -Math.floor(Math.log(delta) / Math.LN10);\r\n\r\n\t\tvar magn = Math.pow(10, -dec),\r\n\t\t\tnorm = delta / magn, // norm is between 1.0 and 10.0\r\n\t\t\tsize;\r\n\r\n\t\tif (norm < 1.5) {\r\n\t\t\tsize = 1;\r\n\t\t} else if (norm < 3) {\r\n\t\t\tsize = 2;\r\n\t\t\t// special case for 2.5, requires an extra decimal\r\n\t\t\tif (norm > 2.25) {\r\n\t\t\t\tsize = 2.5;\r\n\t\t\t\t++dec;\r\n\t\t\t}\r\n\t\t} else if (norm < 7.5) {\r\n\t\t\tsize = 5;\r\n\t\t} else {\r\n\t\t\tsize = 10;\r\n\t\t}\r\n\r\n\t\tsize *= magn;\r\n\r\n\t\t// reduce starting decimals if not needed\r\n\t\tif (Math.floor(value) === value) { dec = 0; }\r\n\r\n\t\tvar result = {};\r\n\t\tresult.decimals = Math.max(0, dec);\r\n\t\tresult.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tlink(scope, elem, attrs, ctrl) {\r\n\t\tvar templateSrv = this.templateSrv;\r\n\t\tvar diagramElement = elem.find('.diagram');\r\n\t\tdiagramElement.append('<div id=\"' + ctrl.containerDivId + '\"></div>');\r\n\t\tvar diagramContainer = $(document.getElementById(ctrl.containerDivId));\r\n\t\tconsole.debug('found diagramContainer');\r\n\t\tconsole.debug(diagramContainer);\r\n\t\telem.css('height', ctrl.height + 'px');\r\n\r\n\t\tvar canvas = elem.find('.canvas')[0];\r\n\t\tctrl.canvas = canvas;\r\n\t\tvar gradientValueMax = elem.find('.gradient-value-max')[0];\r\n\t\tvar gradientValueMin = elem.find('.gradient-value-min')[0];\r\n\r\n\t\tfunction render() {\r\n\t\t\tsetElementHeight();\r\n\t\t\tupdateCanvasStyle();\r\n\t\t\tupdateStyle();\r\n\t\t}\r\n\r\n\t\tfunction updateCanvasStyle() {\r\n\t\t\tcanvas.width = Math.max(diagramElement[0].clientWidth, 100);\r\n\t\t\tvar canvasContext = canvas.getContext(\"2d\");\r\n\t\t\tcanvasContext.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\tvar grd = canvasContext.createLinearGradient(0, 0, canvas.width, 0);\r\n\t\t\tvar colorWidth = 1 / Math.max(ctrl.panel.colors.length, 1);\r\n\t\t\tfor (var i = 0; i < ctrl.panel.colors.length; i++) {\r\n\t\t\t\tvar currentColor = ctrl.panel.colors[i];\r\n\t\t\t\tgrd.addColorStop(Math.min(colorWidth * i, 1), currentColor);\r\n\t\t\t}\r\n\t\t\tcanvasContext.fillStyle = grd;\r\n\t\t\tcanvasContext.fillRect(0, 0, canvas.width, 3);\r\n\t\t\tctrl.canvasContext = canvasContext;\r\n\r\n\t\t\tgradientValueMax.innerText = Math.max.apply(Math, ctrl.panel.thresholds.split(','));\r\n\t\t\tgradientValueMin.innerText = Math.min.apply(Math, ctrl.panel.thresholds.split(','));\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction setElementHeight() {\r\n\t\t\t//diagramContainer.css('height', ctrl.height + 'px');\r\n\t\t}\r\n\r\n\t\tthis.events.on('render', function () {\r\n\t\t\trender();\r\n\t\t\tctrl.renderingCompleted();\r\n\t\t});\r\n\r\n\t\tfunction updateStyle() {\r\n\t\t\tvar data = ctrl.svgData;\r\n\t\t\tctrl.svgData = {}; // get rid of the data after consuming it. This prevents adding duplicate DOM elements\r\n\t\t\tconsole.info('updating svg style');\r\n\t\t\tvar svg = $(document.getElementById(ctrl.panel.graphId));\r\n\t\t\t$(svg).css('min-width', $(svg).css('max-width'));\r\n\t\t\tif (ctrl.panel.maxWidth) {\r\n\t\t\t\t$(svg).css('max-width', '100%');\r\n\t\t\t}\r\n\r\n\t\t\tif (svg[0] === undefined) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var key in data) {\r\n\t\t\t\tvar seriesItem = data[key];\r\n\r\n\t\t\t\t// Find nodes by ID if we can\r\n\t\t\t\tconsole.info('finding targetElement');\r\n\t\t\t\tvar targetElement = d3.select(svg[0].getElementById(key)); // $(svg).find('#'+key).first(); // jquery doesnt work for some ID expressions [prometheus data]\r\n\r\n\t\t\t\tif (targetElement[0][0] !== null) { // probably a flowchart\r\n\t\t\t\t\t// targetElement.selectAll('rect,circle,polygon').style('fill', seriesItem.color);\r\n\r\n\t\t\t\t\tvar div = targetElement.select('div');\r\n\t\t\t\t\tvar fo = targetElement.select('foreignObject');\r\n\t\t\t\t\t// make foreign object element taller to accomdate value in FireFox/IE\r\n\t\t\t\t\tfo.attr('height', 45);\r\n\t\t\t\t\t// Add value text\r\n\t\t\t\t\tdiv.style('text-align', 'center');\r\n\t\t\t\t\tvar br = div.append('br');\r\n\t\t\t\t\tvar p = div.append('span');\r\n\t\t\t\t\tp.classed('diagram-value');\r\n\t\t\t\t\tp.style('background-color', seriesItem.color);\r\n\t\t\t\t\tp.style('display', 'inline-block');\r\n\t\t\t\t\tp.style('margin', '6px 0');\r\n\t\t\t\t\tp.style('padding', '0 8px');\r\n\t\t\t\t\tp.style('line-height', '16px');\r\n\t\t\t\t\tp.style('border-radius', '16px');\r\n\t\t\t\t\tp.html(seriesItem.valueFormatted);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.debug('finding element that contains id: ' + key);\r\n\t\t\t\t\t// maybe a flowchart with an alias text node\r\n\t\t\t\t\ttargetElement = $(svg).find('div:contains(\"' + key + '\")').filter(function () {\r\n\t\t\t\t\t\t// Matches node name ( 'foo' in both 'foo' and 'foo[bar]')\r\n\t\t\t\t\t\treturn $(this).attr('id') === key;\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (targetElement.length > 0) {\r\n\t\t\t\t\t\ttargetElement.parents('.node').find('rect, circle, polygon').css('fill', seriesItem.color);\r\n\t\t\t\t\t\t// make foreign object element taller to accomdate value in FireFox/IE\r\n\t\t\t\t\t\ttargetElement.parents('.node').find('foreignObject').attr('height', 45);\r\n\t\t\t\t\t\t// for edge matches\r\n\t\t\t\t\t\tvar edgeElement = targetElement.parent().find('.edgeLabel');\r\n\t\t\t\t\t\tif (edgeElement.length > 0) {\r\n\t\t\t\t\t\t\tedgeElement.css('background-color', 'transparent');\r\n\t\t\t\t\t\t\tedgeElement.append('<br/>' + seriesItem.valueFormatted).addClass('diagram-value');\r\n\t\t\t\t\t\t\tedgeElement.parent('div').css('text-align', 'center').css('background-color', seriesItem.color);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvar dElement = d3.select(targetElement[0]);\r\n\t\t\t\t\t\t\t// Add value text\r\n\t\t\t\t\t\t\tvar p = dElement.append('p');\r\n\t\t\t\t\t\t\tp.classed('diagram-value');\r\n\t\t\t\t\t\t\tp.style('background-color', seriesItem.color);\r\n\t\t\t\t\t\t\tp.html(seriesItem.valueFormatted);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttargetElement = $(svg).find('text:contains(\"' + key + '\")'); // sequence diagram, gantt ?\r\n\t\t\t\t\t\tif (targetElement.length === 0) {\r\n\t\t\t\t\t\t\tconsole.warn('couldnt not find a diagram node with id/text: ' + key);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// for node matches\r\n\t\t\t\t\t\ttargetElement.parent().find('rect, circle, polygon').css('fill', seriesItem.color);\r\n\t\t\t\t\t\ttargetElement.append('\\n' + seriesItem.valueFormatted);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.debug(targetElement);\r\n\t\t\t\tconsole.info('set nodes:' + key + ' to color:' + seriesItem.color);\r\n\t\t\t}\r\n\t\t\t//return $(svg).html();\r\n\t\t} // End updateStyle()\r\n\t}\r\n\t// End Class\r\n}\r\n\r\nfunction getColorForValue(data, value) {\r\n\tconsole.info('Getting color for value');\r\n\tconsole.debug(data);\r\n\tconsole.debug(value);\r\n\tfor (var i = data.thresholds.length; i > 0; i--) {\r\n\t\tif (value >= data.thresholds[i - 1]) {\r\n\t\t\treturn data.colorMap[i];\r\n\t\t}\r\n\t}\r\n\treturn _.first(data.colorMap);\r\n}\r\n\r\nfunction getColorByXPercentage(canvas, xPercent) {\r\n\tvar x = canvas.width * xPercent;\r\n\tvar context = canvas.getContext(\"2d\");\r\n\tvar p = context.getImageData(x, 1, 1, 1).data;\r\n\tvar color = 'rgba(' + [p[0] + ',' + p[1] + ',' + p[2] + ',' + p[3]] + ')';\r\n\treturn color;\r\n}\r\n\r\nDiagramCtrl.templateUrl = 'module.html';\r\n\r\nexport {\r\n\tDiagramCtrl,\r\n\tDiagramCtrl as MetricsPanelCtrl\r\n};\r\n"]}