{"version":3,"sources":["../src/echarts_ctrl.js"],"names":["MetricsPanelCtrl","_","echarts","EchartsCtrl","$scope","$injector","panelDefaults","echartsOption","bgColor","colorArr","title","subTitle","titleX","titleY","toolBoxShow","legendShow","legendOrient","legendTop","legendLeft","series","name","IS_CONCENTRIC","roseType","minRadius","maxRadius","centerX","centerY","data","name2","USE","fakeData","url","request","updateInterval","defaultsDeep","panel","events","on","onDataReceived","bind","onDataError","onInitEditMode","render","that","setTimeout","updateData","xmlhttp","window","XMLHttpRequest","ActiveXObject","onreadystatechange","readyState","status","UrlData","JSON","parse","responseText","open","send","$timeout","dataList","eval","translateData","console","log","onRender","IS_DATA_CHANGED","dataArr","isArray","i","length","push","target","value","datapoints","err","subTabIndex","addEditorTab","colorIndex","color","obj","index","splice","map","scope","elem","attrs","ctrl","$panelContainer","find","setHeight","height","row","isString","parseInt","replace","style","myChart","init","resize","callInterval","timeout","result","func","callBack","interval","context","args","arguments","clearInterval","setInterval","apply","clear","setOption","backgroundColor","text","subtext","x","y","textStyle","toolbox","show","feature","dataView","readOnly","saveAsImage","tooltip","trigger","formatter","legend","orient","top","left","getLegend","getSeries","count","dispatchAction","type","seriesIndex","dataIndex","seriesArr","forEach","radius","center","getData","itemStyle","emphasis","shadowBlur","shadowColor","clockWise","hoverAnimation","getRadius","min","max","reg","unit","test","parseFloat","seriesData","allData","newData","m","n","normal","label","labelLine","renderingCompleted","templateUrl"],"mappings":"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","file":"echarts_ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\r\nimport _ from 'lodash';\r\nimport echarts from './libs/echarts.min';\r\nimport './libs/echarts-liquidfill.min';\r\nimport './libs/dark';\r\nimport './style.css!';\r\n\r\nexport class EchartsCtrl extends MetricsPanelCtrl {\r\n\r\n    constructor($scope, $injector) {\r\n        super($scope, $injector);\r\n\r\n        const panelDefaults = {\r\n            echartsOption: {\r\n                bgColor: '#1f1d1d',\r\n                colorArr: ['rgba(234,74,45,1)', '#FDB225', 'rgba(45,148,215,1)', '#16A59C', 'rgba(234,74,45,0.9)', '#b5c334'],\r\n                title: '主机容量',\r\n                subTitle: '',\r\n                titleX: 'center',\r\n                titleY: '',\r\n                toolBoxShow: true,\r\n                legendShow: true,\r\n                legendOrient: 'vertical',\r\n                legendTop: '0%',\r\n                legendLeft: 'left',\r\n                series: [\r\n                    {\r\n                        name: '饼图1',\r\n                        IS_CONCENTRIC: false,\r\n                        roseType: false,\r\n                        minRadius: '0%',\r\n                        maxRadius: '50%',\r\n                        centerX: '25%',\r\n                        centerY: '50%',\r\n                        data: [\r\n                            {\r\n                                name: '已用容量',\r\n                                name2: '剩余容量'\r\n                            }, {\r\n                                name: '剩余容量',\r\n                                name2: '已用容量'\r\n                            }\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: '饼图2',\r\n                        IS_CONCENTRIC: true,\r\n                        roseType: false,\r\n                        minRadius: '30%',\r\n                        maxRadius: '50%',\r\n                        centerX: '75%',\r\n                        centerY: '50%',\r\n                        data: [\r\n                            {\r\n                                name: '已用容量',\r\n                                name2: '剩余容量'\r\n                            }, {\r\n                                name: '剩余容量',\r\n                                name2: '已用容量'\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            USE: 'FAKE_DATA',\r\n\r\n            fakeData: '[{\"target\":\"已用容量\",\"datapoints\":[[\"115\",1499285716736]]},{\"target\":\"剩余容量\",\"datapoints\":[[\"87\",1499285716736]]}]',\r\n            url: '',\r\n            request: '',\r\n            updateInterval: 10000\r\n        };\r\n\r\n        _.defaultsDeep(this.panel, panelDefaults);\r\n\r\n        this.events.on('data-received', this.onDataReceived.bind(this));\r\n        this.events.on('data-error', this.onDataError.bind(this));\r\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        this.events.on('panel-initialized', this.render.bind(this));\r\n\r\n        if (this.panel.USE === 'FAKE_DATA' && this.panel.fakeData) {\r\n            let that = this;\r\n            setTimeout(function () {\r\n                that.onDataReceived(that.panel.fakeData);\r\n            }, 500);\r\n        } else {\r\n            this.updateData();\r\n        }\r\n    }\r\n\r\n    //post请求\r\n    updateData() {\r\n        let that = this, xmlhttp;\r\n\r\n        if (window.XMLHttpRequest) {\r\n            xmlhttp = new XMLHttpRequest();\r\n        } else {\r\n            xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        }\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n                that.UrlData = JSON.parse(xmlhttp.responseText);\r\n                that.onDataReceived();\r\n            }\r\n        };\r\n\r\n        if (that.panel.USE === 'URL' && that.panel.url && that.panel.request) {\r\n            xmlhttp.open(\"POST\", that.panel.url, true);\r\n            xmlhttp.send(that.panel.request);\r\n        } else {\r\n            xmlhttp = null;\r\n        }\r\n\r\n        this.$timeout(() => { this.updateData(); }, that.panel.updateInterval);\r\n    }\r\n\r\n    onDataReceived(dataList) {\r\n\r\n\r\n        this.dataList = this.panel.USE === 'URL' ? this.UrlData : dataList;\r\n\r\n        if (this.panel.USE === 'FAKE_DATA' && this.panel.fakeData) {\r\n            this.dataList = eval(this.panel.fakeData); // jshint ignore:line\r\n        }\r\n\r\n        this.data = this.translateData(this.dataList);\r\n        console.log(this.data);\r\n        this.onRender();\r\n    }\r\n\r\n    onRender() {\r\n        this.IS_DATA_CHANGED = true;\r\n        this.render();\r\n        this.IS_DATA_CHANGED = false;\r\n    }\r\n\r\n    translateData(data) {\r\n        let dataArr = [];\r\n        if (_.isArray(data)) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                dataArr.push({\r\n                    name: data[i].target,\r\n                    value: data[i].datapoints[data[i].datapoints.length - 1][0]\r\n                });\r\n            }\r\n        }\r\n        return dataArr;\r\n    }\r\n\r\n    onDataError(err) {\r\n        this.render();\r\n    }\r\n\r\n    onInitEditMode() {\r\n        this.subTabIndex = 0;\r\n        this.addEditorTab('数据配置', 'public/plugins/dxc-pie-panel/editer-metric.html', 2);\r\n        this.addEditorTab('常规配置', 'public/plugins/dxc-pie-panel/editor-echarts.html', 3);\r\n        this.addEditorTab('饼图配置', 'public/plugins/dxc-pie-panel/editor-pie.html', 4);\r\n    } addColor() {\r\n        this.panel.echartsOption.colorArr.push('rgba(255, 255, 255, 1)');\r\n        this.onRender();\r\n    }\r\n\r\n    changeColor(colorIndex, color) {\r\n        this.panel.echartsOption.colorArr[colorIndex] = color;\r\n        this.onRender();\r\n    }\r\n\r\n    addSeries() {\r\n        this.panel.echartsOption.series.push({\r\n            name: '',\r\n            IS_CONCENTRIC: false,\r\n            roseType: false,\r\n            minRadius: '0%',\r\n            maxRadius: '55%',\r\n            centerX: '50%',\r\n            centerY: '50%',\r\n            data: []\r\n        });\r\n        this.onRender();\r\n    }\r\n\r\n    addData(dataArr) {\r\n        dataArr.push({\r\n            name: '',\r\n            name2: ''\r\n        });\r\n        this.onRender();\r\n    }\r\n\r\n    remove(obj, index) {\r\n        obj.splice(index, 1);\r\n        this.onRender();\r\n    }\r\n\r\n    getData() {\r\n        return _.map(this.data, function (data) {\r\n                return data.name;\r\n        });\r\n    }\r\n    // invertColor() {\r\n    //     this.panel.echartsOption.colorArr.reverse();\r\n    //     this.onRender();\r\n    // }\r\n\r\n    link(scope, elem, attrs, ctrl) {\r\n        const $panelContainer = elem.find('.echarts_container')[0];\r\n\r\n        ctrl.IS_DATA_CHANGED = true;\r\n\r\n        function setHeight() {\r\n            let height = ctrl.height || panel.height || ctrl.row.height;\r\n            if (_.isString(height)) {\r\n                height = parseInt(height.replace('px', ''), 10);\r\n            }\r\n            $panelContainer.style.height = height + 'px';\r\n        }\r\n\r\n        setHeight();\r\n\r\n        let myChart = echarts.init($panelContainer, 'dark');\r\n        myChart.resize();\r\n\r\n        // 防止重复触发事件\r\n        var callInterval = function callInterval() {\r\n            var timeout, result;\r\n\r\n            function func(callBack, interval) {\r\n                var context = this; // jshint ignore:line\r\n                var args = arguments;\r\n\r\n                if (timeout) clearInterval(timeout);\r\n\r\n                timeout = setInterval(function () {\r\n                    result = callBack.apply(context, args);\r\n                }, interval);\r\n\r\n                return result;\r\n            }\r\n\r\n            return func;\r\n        }();\r\n\r\n        function render() {\r\n            if (!myChart) return;\r\n\r\n            setHeight();\r\n            myChart.resize();\r\n\r\n            if (ctrl.IS_DATA_CHANGED) {\r\n                myChart.clear();\r\n\r\n                myChart.setOption({\r\n                    backgroundColor: ctrl.panel.echartsOption.bgColor,\r\n                    color: ctrl.panel.echartsOption.colorArr,\r\n                    title: {\r\n                        text: ctrl.panel.echartsOption.title,\r\n                        subtext: ctrl.panel.echartsOption.subTitle,\r\n                        x: ctrl.panel.echartsOption.titleX,\r\n                        y: ctrl.panel.echartsOption.titleY,\r\n                        textStyle: {\r\n                            // fontWeight: 'normal'\r\n                        }\r\n                    },\r\n                    toolbox: {\r\n                        show: ctrl.panel.echartsOption.toolBoxShow,\r\n                        feature: {\r\n                            dataView: {\r\n                                show: true,\r\n                                readOnly: false\r\n                            },\r\n                            saveAsImage: {\r\n                                show: true\r\n                            }\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'item',\r\n                        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n                    },\r\n                    legend: {\r\n                        show: ctrl.panel.echartsOption.legendShow,\r\n                        orient: ctrl.panel.echartsOption.legendOrient,\r\n                        top: ctrl.panel.echartsOption.legendTop,\r\n                        left: ctrl.panel.echartsOption.legendLeft,\r\n                        data: getLegend()\r\n                    },\r\n                    series: getSeries(),\r\n\r\n                });\r\n                var count = 0;\r\n                callInterval(function () {\r\n                    myChart.dispatchAction({\r\n                        type: 'downplay',\r\n                        seriesIndex: 0\r\n                    });\r\n                    myChart.dispatchAction({\r\n                        type: 'highlight',\r\n                        seriesIndex: 0,\r\n                        dataIndex: (count++) % 4\r\n                    });\r\n                }, 2000);\r\n            }\r\n        }\r\n\r\n        function getLegend() {\r\n            let legend = [];\r\n            if (_.isArray(ctrl.data)) {\r\n                for (let i = 0; i < ctrl.data.length; i++) {\r\n                    legend.push(ctrl.data[i].name);\r\n                }\r\n            }\r\n            return legend;\r\n        }\r\n\r\n        function getSeries() {\r\n            let seriesArr = [];\r\n\r\n            if (_.isArray(ctrl.data)) {\r\n                ctrl.panel.echartsOption.series.forEach(function (series, index) {\r\n                    if (!series.IS_CONCENTRIC) {\r\n                        seriesArr.push({\r\n                            name: series.name,\r\n                            type: 'pie',\r\n                            radius: [series.minRadius, series.maxRadius],\r\n                            center: [series.centerX, series.centerY],\r\n                            roseType: series.roseType,\r\n                            data: getData(series.data, ctrl.data, series.IS_CONCENTRIC),\r\n                            itemStyle: {\r\n                                emphasis: {\r\n                                    shadowBlur: 10,\r\n                                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                                }\r\n                            }\r\n                        });\r\n                    } else {\r\n                        series.data.forEach((data, index) => {\r\n                            seriesArr.push({\r\n                                name: series.name,\r\n                                type: 'pie',\r\n                                clockWise: false,\r\n                                hoverAnimation: false,\r\n                                radius: getRadius(index, series.minRadius, series.maxRadius),\r\n                                center: [series.centerX, series.centerY],\r\n                                data: getData([data], ctrl.data, series.IS_CONCENTRIC),\r\n                                itemStyle: {\r\n                                    emphasis: {\r\n                                        shadowBlur: 10,\r\n                                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                                    }\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            return seriesArr;\r\n        }\r\n\r\n        function getRadius(index, min, max) {\r\n            const reg = /%+/;\r\n            let unit = reg.test(min) && reg.test(max) ? '%' : 0;\r\n            let interval = (parseFloat(max) - parseFloat(min)) / ctrl.data.length;\r\n            return [(interval * index + parseFloat(min) + unit), (interval * (index + 1) + parseFloat(min) + unit)];\r\n        }\r\n\r\n        function getData(seriesData, allData, IS_CONCENTRIC) {\r\n            let newData = [];\r\n\r\n            if (_.isArray(seriesData) && _.isArray(allData)) {\r\n                seriesData.forEach(m => {\r\n                    allData.forEach(n => {\r\n                        if (!IS_CONCENTRIC) {\r\n                            if (m.name == n.name) {\r\n                                newData.push(n);\r\n                            }\r\n                        } else {\r\n                            if (m.name == n.name) newData[0] = n;\r\n                            if (m.name2 == n.name) {\r\n                                newData[1] = {\r\n                                    name: '',\r\n                                    value: n.value,\r\n                                    itemStyle: {\r\n                                        normal: {\r\n                                            color: 'rgba(0,0,0,0)',\r\n                                            label: { show: false },\r\n                                            labelLine: { show: false }\r\n                                        },\r\n                                        emphasis: {\r\n                                            color: 'rgba(0,0,0,0)'\r\n                                        }\r\n                                    }\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n            return newData;\r\n        }\r\n\r\n        this.events.on('render', function () {\r\n            render();\r\n            ctrl.renderingCompleted();\r\n        });\r\n    }\r\n}\r\n\r\nEchartsCtrl.templateUrl = 'module.html';\r\n"]}