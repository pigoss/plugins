{"version":3,"sources":["../src/echarts_ctrl.js"],"names":["MetricsPanelCtrl","_","echarts","pieA","pieB","pieTypeArr","name","func","EchartsCtrl","$scope","$injector","panelDefaults","echartsOption","bgColor","colorArr","title","subTitle","titleX","titleY","toolBoxShow","legendShow","legendOrient","legendTop","legendLeft","legendItemHeight","legendItemWidth","series","USE","fakeData","url","request","updateInterval","seriesDefaults","pieType","roseType","minRadius","maxRadius","centerX","centerY","data","defaultsDeep","panel","length","events","on","onDataReceived","bind","onDataError","onInitEditMode","render","that","setTimeout","updateData","xmlhttp","window","XMLHttpRequest","ActiveXObject","onreadystatechange","readyState","status","UrlData","JSON","parse","responseText","open","send","$timeout","dataList","eval","translateData","onRender","IS_DATA_CHANGED","dataArr","isArray","i","push","target","value","datapoints","err","subTabIndex","addEditorTab","colorIndex","color","obj","index","splice","map","scope","elem","attrs","ctrl","$panelContainer","find","callInterval","timeout","result","callBack","interval","context","args","arguments","clearInterval","setInterval","apply","setHeight","height","row","isString","parseInt","replace","style","myChart","init","resize","clear","setOption","backgroundColor","text","subtext","x","y","toolbox","show","feature","dataView","readOnly","saveAsImage","tooltip","trigger","formatter","legend","orient","top","left","itemWidth","itemHeight","getLegend","getSeries","count","dispatchAction","type","seriesIndex","dataIndex","forEach","uniq","concat","seriesArr","newSeries","defaultSeries","radius","center","getDefaultSeriesData","itemStyle","emphasis","shadowBlur","shadowColor","tIndex","seriesData","allData","newData","sData","aData","angular","copy","renderingCompleted","templateUrl"],"mappings":"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","file":"echarts_ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\r\nimport _ from 'lodash';\r\nimport echarts from './libs/echarts.min';\r\nimport './libs/echarts-liquidfill.min';\r\nimport './libs/dark';\r\nimport './style.css!';\r\nimport { pieA } from './PieA';\r\nimport { pieB } from './PieB';\r\nconst pieTypeArr = [\r\n    {\r\n        name: '并列',\r\n        func: pieA\r\n    }, {\r\n        name: '环形',\r\n        func: pieB\r\n    }\r\n];\r\n\r\nexport class EchartsCtrl extends MetricsPanelCtrl {\r\n\r\n    constructor($scope, $injector) {\r\n        super($scope, $injector);\r\n\r\n        const panelDefaults = {\r\n            echartsOption: {\r\n                bgColor: '#1f1d1d',\r\n                colorArr: ['rgba(234,74,45,1)', '#FDB225', 'rgba(45,148,215,1)', '#16A59C', 'rgba(234,74,45,0.9)', '#b5c334'],\r\n                title: '主机容量',\r\n                subTitle: '',\r\n                titleX: '65%',\r\n                titleY: '20%',\r\n                toolBoxShow: true,\r\n                legendShow: true,\r\n                legendOrient: 'vertical',\r\n                legendTop: '65%',\r\n                legendLeft: '65%',\r\n                legendItemHeight:8,\r\n                legendItemWidth:8,\r\n                series: []\r\n            },\r\n            USE: 'FAKE_DATA',\r\n\r\n            fakeData: '[{\"target\":\"已用容量\",\"datapoints\":[[\"115\",1499285716736]]},{\"target\":\"剩余容量\",\"datapoints\":[[\"87\",1499285716736]]}]',\r\n            url: '',\r\n            request: '',\r\n            updateInterval: 10000\r\n        };\r\n\r\n        const seriesDefaults = [\r\n            {\r\n                name: '饼图1',\r\n                pieType: '环形',\r\n                roseType: false,\r\n                minRadius: '50%',\r\n                maxRadius: '70%',\r\n                centerX: '30%',\r\n                centerY: '50%',\r\n                data: ['已用容量', '剩余容量']\r\n            }\r\n        ];\r\n\r\n        _.defaultsDeep(this.panel, panelDefaults);\r\n\r\n        if (this.panel.echartsOption.series.length == 0) {\r\n            _.defaultsDeep(this.panel.echartsOption.series, seriesDefaults);\r\n        }\r\n\r\n        this.events.on('data-received', this.onDataReceived.bind(this));\r\n        this.events.on('data-error', this.onDataError.bind(this));\r\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        this.events.on('panel-initialized', this.render.bind(this));\r\n\r\n        if (this.panel.USE === 'FAKE_DATA' && this.panel.fakeData) {\r\n            let that = this;\r\n            setTimeout(function () {\r\n                that.onDataReceived(that.panel.fakeData);\r\n            }, 500);\r\n        } else {\r\n            this.updateData();\r\n        }\r\n    }\r\n\r\n    //post请求\r\n    updateData() {\r\n        let that = this, xmlhttp;\r\n\r\n        if (window.XMLHttpRequest) {\r\n            xmlhttp = new XMLHttpRequest();\r\n        } else {\r\n            xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        }\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n                that.UrlData = JSON.parse(xmlhttp.responseText);\r\n                that.onDataReceived();\r\n            }\r\n        };\r\n\r\n        if (that.panel.USE === 'URL' && that.panel.url && that.panel.request) {\r\n            xmlhttp.open(\"POST\", that.panel.url, true);\r\n            xmlhttp.send(that.panel.request);\r\n        } else {\r\n            xmlhttp = null;\r\n        }\r\n\r\n        this.$timeout(() => { this.updateData(); }, that.panel.updateInterval);\r\n    }\r\n\r\n    onDataReceived(dataList) {\r\n        this.dataList = this.panel.USE === 'URL' ? this.UrlData : dataList;\r\n\r\n        if (this.panel.USE === 'FAKE_DATA' && this.panel.fakeData) {\r\n            this.dataList = eval(this.panel.fakeData); // jshint ignore:line\r\n        }\r\n\r\n        this.data = this.translateData(this.dataList);\r\n        this.onRender();\r\n    }\r\n\r\n    onRender() {\r\n        this.IS_DATA_CHANGED = true;\r\n        this.render();\r\n        this.IS_DATA_CHANGED = false;\r\n    }\r\n\r\n    translateData(data) {\r\n        let dataArr = [];\r\n        if (_.isArray(data)) {\r\n            for (let i = 0; i < data.length; i++) {\r\n                dataArr.push({\r\n                    name: data[i].target,\r\n                    value: data[i].datapoints[data[i].datapoints.length - 1][0]\r\n                });\r\n            }\r\n        }\r\n        return dataArr;\r\n    }\r\n\r\n    onDataError(err) {\r\n        this.render();\r\n    }\r\n\r\n    onInitEditMode() {\r\n        this.subTabIndex = 0;\r\n        this.addEditorTab('数据配置', 'public/plugins/dxc-pie-panel/editer-metric.html', 2);\r\n        this.addEditorTab('常规配置', 'public/plugins/dxc-pie-panel/editor-echarts.html', 3);\r\n        this.addEditorTab('饼图配置', 'public/plugins/dxc-pie-panel/editor-pie.html', 4);\r\n    }\r\n\r\n    addColor() {\r\n        this.panel.echartsOption.colorArr.push('rgba(255, 255, 255, 1)');\r\n        this.onRender();\r\n    }\r\n\r\n    changeColor(colorIndex, color) {\r\n        this.panel.echartsOption.colorArr[colorIndex] = color;\r\n        this.onRender();\r\n    }\r\n\r\n    addSeries() {\r\n        this.panel.echartsOption.series.push({\r\n            name: '饼图' + (this.panel.echartsOption.series.length + 1),\r\n            pieType: '环形',\r\n            roseType: false,\r\n             minRadius: '50%',\r\n                maxRadius: '70%',\r\n                centerX: '30%',\r\n                centerY: '50%',\r\n            data: []\r\n        });\r\n\r\n        this.subTabIndex = this.panel.echartsOption.series.length - 1;\r\n\r\n        this.onRender();\r\n    }\r\n\r\n    addData(dataArr) {\r\n        dataArr.push(this.data[0].name);\r\n        this.onRender();\r\n    }\r\n\r\n    remove(obj, index) {\r\n        obj.splice(index, 1);\r\n        this.onRender();\r\n    }\r\n\r\n    getData() {\r\n        return _.map(this.data, function (data) {\r\n            return data.name;\r\n        });\r\n    }\r\n\r\n    // invertColor() {\r\n    //     this.panel.echartsOption.colorArr.reverse();\r\n    //     this.onRender();\r\n    // }\r\n\r\n    link(scope, elem, attrs, ctrl) {\r\n        const $panelContainer = elem.find('.echarts_container')[0];\r\n\r\n        // 防止重复触发事件\r\n        var callInterval = function callInterval() {\r\n            var timeout, result;\r\n\r\n            function func(callBack, interval) {\r\n                var context = this; // jshint ignore:line\r\n                var args = arguments;\r\n\r\n                if (timeout) clearInterval(timeout);\r\n\r\n                timeout = setInterval(function () {\r\n                    result = callBack.apply(context, args);\r\n                }, interval);\r\n\r\n                return result;\r\n            }\r\n\r\n            return func;\r\n        }();\r\n\r\n        function setHeight() {\r\n            let height = ctrl.height || panel.height || ctrl.row.height;\r\n            if (_.isString(height)) {\r\n                height = parseInt(height.replace('px', ''), 10);\r\n            }\r\n            $panelContainer.style.height = height + 'px';\r\n        }\r\n\r\n        setHeight();\r\n\r\n        let myChart = echarts.init($panelContainer, 'dark');\r\n        myChart.resize();\r\n\r\n        ctrl.IS_DATA_CHANGED = true;\r\n\r\n        function render() {\r\n            if (!myChart) return;\r\n\r\n            setHeight();\r\n            myChart.resize();\r\n\r\n            if (ctrl.IS_DATA_CHANGED) {\r\n                myChart.clear();\r\n\r\n                myChart.setOption({\r\n                    backgroundColor: ctrl.panel.echartsOption.bgColor,\r\n                    color: ctrl.panel.echartsOption.colorArr,\r\n                    title: {\r\n                        text: ctrl.panel.echartsOption.title,\r\n                        subtext: ctrl.panel.echartsOption.subTitle,\r\n                        x: ctrl.panel.echartsOption.titleX,\r\n                        y: ctrl.panel.echartsOption.titleY\r\n                    },\r\n                    toolbox: {\r\n                        show: ctrl.panel.echartsOption.toolBoxShow,\r\n                        feature: {\r\n                            dataView: {\r\n                                show: true,\r\n                                readOnly: false\r\n                            },\r\n                            saveAsImage: {\r\n                                show: true\r\n                            }\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'item',\r\n                        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n                    },\r\n                    legend: {\r\n                        show: ctrl.panel.echartsOption.legendShow,\r\n                        orient: ctrl.panel.echartsOption.legendOrient,\r\n                        top: ctrl.panel.echartsOption.legendTop,\r\n                        left: ctrl.panel.echartsOption.legendLeft,\r\n                        itemWidth: ctrl.panel.echartsOption.legendItemWidth,\r\n\t\titemHeight: ctrl.panel.echartsOption.legendItemHeight,\r\n                        data: getLegend()\r\n                    },\r\n                    series: getSeries()\r\n                });\r\n\r\n                let count = 0;\r\n                callInterval(function () {\r\n                    myChart.dispatchAction({\r\n                        type: 'downplay',\r\n                        seriesIndex: 0\r\n                    });\r\n                    myChart.dispatchAction({\r\n                        type: 'highlight',\r\n                        seriesIndex: 0,\r\n                        dataIndex: (count++) % getSeries()[0].data.length\r\n                    });\r\n                }, 2000);\r\n            }\r\n        }\r\n\r\n        function getLegend() {\r\n            let legend = [];\r\n\r\n            ctrl.panel.echartsOption.series.forEach(series => {\r\n                legend = _.uniq(legend.concat(series.data));\r\n            });\r\n\r\n            return legend;\r\n        }\r\n\r\n        function getSeries() {\r\n            let seriesArr = [];\r\n\r\n            if (_.isArray(ctrl.data)) {\r\n                // 遍历保存的series\r\n                ctrl.panel.echartsOption.series.forEach(series => {\r\n                    //默认类型series\r\n                    let newSeries = [];\r\n                    let defaultSeries = [{\r\n                        name: series.name,\r\n                        type: 'pie',\r\n                        radius: [series.minRadius, series.maxRadius],\r\n                        center: [series.centerX, series.centerY],\r\n                        roseType: series.roseType,\r\n                        data: getDefaultSeriesData(series.data, ctrl.data),\r\n                        itemStyle: {\r\n                            emphasis: {\r\n                                shadowBlur: 10,\r\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                            }\r\n                        }\r\n                    }];\r\n                    // 匹配声明的饼图类型\r\n                    pieTypeArr.forEach((type, tIndex) => {\r\n                        // 如果匹配到了\r\n                        if (series.pieType == type.name) {\r\n                            // 赋值给newSeries\r\n                            newSeries = pieTypeArr[tIndex].func(series, ctrl.data);\r\n                        }\r\n                    });\r\n                    // 加入新series\r\n                    seriesArr = seriesArr.concat(newSeries.length != 0 ? newSeries : defaultSeries);\r\n                });\r\n            }\r\n\r\n            return seriesArr;\r\n        }\r\n\r\n        //默认样式获取数据\r\n        function getDefaultSeriesData(seriesData, allData) {\r\n            let newData = [];\r\n\r\n            if (_.isArray(seriesData) && _.isArray(allData)) {\r\n                // 匹配数据名称\r\n                seriesData.forEach(sData => {\r\n                    allData.forEach(aData => {\r\n                        if (sData == aData.name) {\r\n                            newData.push(angular.copy(aData));\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n            return newData;\r\n        }\r\n\r\n        this.events.on('render', function () {\r\n            render();\r\n            ctrl.renderingCompleted();\r\n        });\r\n    }\r\n}\r\n\r\nEchartsCtrl.templateUrl = 'module.html';\r\n"]}