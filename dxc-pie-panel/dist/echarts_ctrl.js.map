{"version":3,"sources":["../src/echarts_ctrl.js"],"names":["MetricsPanelCtrl","_","echarts","EchartsCtrl","$scope","$injector","panelDefaults","echartsOption","colorArr","title","subTitle","titleX","titleY","toolBoxShow","legendShow","legendOrient","legendTop","legendLeft","IS_CONCENTRIC","roseType","minRadius","maxRadius","centerX","centerY","USE_URL","USE_FAKE_DATA","fakeData","url","request","updateInterval","defaultsDeep","panel","events","on","onDataReceived","bind","onDataError","onInitEditMode","render","that","setTimeout","updateData","xmlhttp","window","XMLHttpRequest","ActiveXObject","onreadystatechange","readyState","status","UrlData","JSON","parse","responseText","open","send","$timeout","dataList","data","eval","translateData","onRender","IS_DATA_CHANGED","length","dataArr","i","push","name","target","value","datapoints","err","subTabIndex","addEditorTab","colorIndex","color","splice","scope","elem","attrs","ctrl","$panelContainer","find","setHeight","height","row","isString","parseInt","replace","style","myChart","init","resize","callInterval","timeout","result","func","callBack","interval","context","args","arguments","clearInterval","setInterval","apply","clear","setOption","backgroundColor","text","subtext","x","y","textStyle","toolbox","show","feature","dataView","readOnly","saveAsImage","tooltip","trigger","formatter","legend","orient","top","left","getLegend","series","getSeries","seriesArr","type","radius","center","itemStyle","emphasis","shadowBlur","shadowColor","Math","floor","clockWise","hoverAnimation","getRadius","normal","label","labelLine","index","min","max","reg","unit","test","parseFloat","renderingCompleted","templateUrl"],"mappings":"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","file":"echarts_ctrl.js","sourcesContent":["import { MetricsPanelCtrl } from 'app/plugins/sdk';\r\nimport _ from 'lodash';\r\nimport echarts from './libs/echarts.min';\r\nimport './libs/echarts-liquidfill.min';\r\nimport './libs/dark';\r\nimport './style.css!';\r\n\r\nexport class EchartsCtrl extends MetricsPanelCtrl {\r\n\r\n    constructor($scope, $injector) {\r\n        super($scope, $injector);\r\n\r\n        const panelDefaults = {\r\n            echartsOption: {\r\n                colorArr: ['#85b6b2', '#6d4f8d', '#cd5e7e', '#e38980', '#f7db88'],\r\n                title: 'ä¸»æºå®¹é',\r\n                subTitle: '',\r\n                titleX: 'center',\r\n                titleY: '',\r\n                toolBoxShow: true,\r\n                legendShow: true,\r\n                legendOrient: 'vertical',\r\n                legendTop: '',\r\n                legendLeft: 'left',\r\n                IS_CONCENTRIC: true,\r\n                roseType: 'area',\r\n                minRadius: '0%',\r\n                maxRadius: '75%',\r\n                centerX: '50%',\r\n                centerY: '50%'\r\n            },\r\n            USE_URL: false,\r\n            USE_FAKE_DATA: true,\r\n            fakeData: '[{\"target\":\"å·²ç¨å®¹é\",\"datapoints\":[[\"115\",1499285716736]]},{\"target\":\"å©ä½å®¹é\",\"datapoints\":[[\"87\",1499285716736]]}]',\r\n            url: '',\r\n            request: '',\r\n            updateInterval: 10000\r\n        };\r\n\r\n        _.defaultsDeep(this.panel, panelDefaults);\r\n\r\n        this.events.on('data-received', this.onDataReceived.bind(this));\r\n        this.events.on('data-error', this.onDataError.bind(this));\r\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n        this.events.on('panel-initialized', this.render.bind(this));\r\n\r\n        if (this.panel.USE_URL && this.panel.USE_FAKE_DATA && this.panel.fakeData) {\r\n            let that = this;\r\n            setTimeout(function () {\r\n                that.onDataReceived(that.panel.fakeData);\r\n            }, 500);\r\n        } else {\r\n            this.updateData();\r\n        }\r\n    }\r\n\r\n    //postè¯·æ±\r\n    updateData() {\r\n        let that = this, xmlhttp;\r\n\r\n        if (window.XMLHttpRequest) {\r\n            xmlhttp = new XMLHttpRequest();\r\n        } else {\r\n            xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        }\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n                that.UrlData = JSON.parse(xmlhttp.responseText);\r\n                that.onDataReceived();\r\n            }\r\n        };\r\n\r\n        if (that.panel.USE_URL && !that.panel.USE_FAKE_DATA && that.panel.url && that.panel.request) {\r\n            xmlhttp.open(\"POST\", that.panel.url, true);\r\n            xmlhttp.send(that.panel.request);\r\n        } else {\r\n            xmlhttp = null;\r\n        }\r\n\r\n        this.$timeout(() => { this.updateData(); }, that.panel.updateInterval);\r\n    }\r\n\r\n    onDataReceived(dataList) {\r\n        this.data = this.panel.USE_URL ? this.UrlData : dataList;\r\n\r\n        if (this.panel.USE_URL && this.panel.USE_FAKE_DATA && this.panel.fakeData) {\r\n            this.data = eval(this.panel.fakeData); // jshint ignore:line\r\n        }\r\n\r\n        this.data = this.translateData(this.data);\r\n        this.onRender();\r\n    }\r\n\r\n    onRender() {\r\n        this.IS_DATA_CHANGED = true;\r\n        this.render();\r\n        this.IS_DATA_CHANGED = false;\r\n    }\r\n\r\n    translateData(data) {\r\n        if (data.length) {\r\n            let dataArr = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                dataArr.push({\r\n                    name: data[i].target,\r\n                    value: data[i].datapoints[data[i].datapoints.length - 1][0]\r\n                });\r\n            }\r\n            return dataArr;\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    onDataError(err) {\r\n        this.render();\r\n    }\r\n\r\n    onInitEditMode() {\r\n        this.subTabIndex = 0;\r\n        this.addEditorTab('æ°æ®', 'public/plugins/dxc-pie-panel/editer-metric.html', 2);\r\n        this.addEditorTab('Echartséç½®', 'public/plugins/dxc-pie-panel/editor-echarts.html', 3);\r\n    }\r\n\r\n    changeColor(colorIndex, color) {\r\n        this.panel.echartsOption.colorArr[colorIndex] = color;\r\n        this.onRender();\r\n    }\r\n\r\n    removeColor(colorIndex) {\r\n        this.panel.echartsOption.colorArr.splice(colorIndex, 1);\r\n        this.onRender();\r\n    }\r\n\r\n    addColor() {\r\n        this.panel.echartsOption.colorArr.push('rgba(255, 255, 255, 1)');\r\n        this.onRender();\r\n    }\r\n\r\n    // invertColor() {\r\n    //     this.panel.echartsOption.colorArr.reverse();\r\n    //     this.onRender();\r\n    // }\r\n\r\n    link(scope, elem, attrs, ctrl) {\r\n        const $panelContainer = elem.find('.echarts_container')[0];\r\n\r\n        ctrl.IS_DATA_CHANGED = true;\r\n\r\n        function setHeight() {\r\n            let height = ctrl.height || panel.height || ctrl.row.height;\r\n            if (_.isString(height)) {\r\n                height = parseInt(height.replace('px', ''), 10);\r\n            }\r\n            $panelContainer.style.height = height + 'px';\r\n        }\r\n\r\n        setHeight();\r\n\r\n        let myChart = echarts.init($panelContainer, 'dark');\r\n        myChart.resize();\r\n\r\n        // é²æ­¢éå¤è§¦åäºä»¶\r\n        var callInterval = function callInterval() {\r\n            var timeout, result;\r\n\r\n            function func(callBack, interval) {\r\n                var context = this; // jshint ignore:line\r\n                var args = arguments;\r\n\r\n                if (timeout) clearInterval(timeout);\r\n\r\n                timeout = setInterval(function () {\r\n                    result = callBack.apply(context, args);\r\n                }, interval);\r\n\r\n                return result;\r\n            }\r\n\r\n            return func;\r\n        }();\r\n\r\n        function render() {\r\n            if (!myChart) return;\r\n\r\n            setHeight();\r\n            myChart.resize();\r\n\r\n            if (ctrl.IS_DATA_CHANGED) {\r\n                myChart.clear();\r\n\r\n                myChart.setOption({\r\n                    backgroundColor: '#1f1d1d',\r\n                    color: ctrl.panel.echartsOption.colorArr,\r\n                    title: {\r\n                        text: ctrl.panel.echartsOption.title,\r\n                        subtext: ctrl.panel.echartsOption.subTitle,\r\n                        x: ctrl.panel.echartsOption.titleX,\r\n                        y: ctrl.panel.echartsOption.titleY,\r\n                        textStyle: {\r\n                            // fontWeight: 'normal'\r\n                        }\r\n                    },\r\n                    toolbox: {\r\n                        show: ctrl.panel.echartsOption.toolBoxShow,\r\n                        feature: {\r\n                            dataView: {\r\n                                show: true,\r\n                                readOnly: false\r\n                            },\r\n                            saveAsImage: {\r\n                                show: true\r\n                            }\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'item',\r\n                        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n                    },\r\n                    legend: {\r\n                        show: ctrl.panel.echartsOption.legendShow,\r\n                        orient: ctrl.panel.echartsOption.legendOrient,\r\n                        top: ctrl.panel.echartsOption.legendTop,\r\n                        left: ctrl.panel.echartsOption.legendLeft,\r\n                        data: getLegend()\r\n                    },\r\n                    series: getSeries()\r\n                });\r\n            }\r\n        }\r\n\r\n        function getLegend() {\r\n            if (ctrl.data) {\r\n                let legend = [];\r\n                for (let i = 0; i < ctrl.data.length; i++) {\r\n                    legend.push(ctrl.data[i].name);\r\n                }\r\n                return legend;\r\n            }\r\n        }\r\n\r\n        function getSeries() {\r\n            let seriesArr = [];\r\n\r\n            if (!ctrl.panel.echartsOption.IS_CONCENTRIC) {\r\n                seriesArr.push({\r\n                    name: ctrl.panel.echartsOption.title,\r\n                    type: 'pie',\r\n                    radius: [ctrl.panel.echartsOption.minRadius, ctrl.panel.echartsOption.maxRadius],\r\n                    center: [ctrl.panel.echartsOption.centerX, ctrl.panel.echartsOption.centerY],\r\n                    roseType: ctrl.panel.echartsOption.roseType,\r\n                    data: ctrl.data,\r\n                    itemStyle: {\r\n                        emphasis: {\r\n                            shadowBlur: 10,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                if (ctrl.data) {\r\n                    for (let i = 0; i < Math.floor(ctrl.data.length / 2); i++) {\r\n                        seriesArr.push({\r\n                            name: ctrl.panel.echartsOption.title,\r\n                            type: 'pie',\r\n                            clockWise: false,\r\n                            hoverAnimation: false,\r\n                            radius: getRadius(i, ctrl.panel.echartsOption.minRadius, ctrl.panel.echartsOption.maxRadius),\r\n                            center: [ctrl.panel.echartsOption.centerX, ctrl.panel.echartsOption.centerY],\r\n                            data: [\r\n                                ctrl.data[2 * i],\r\n                                {\r\n                                    name: '',\r\n                                    value: ctrl.data[2 * i + 1].value,\r\n                                    itemStyle: {\r\n                                        normal: {\r\n                                            color: 'rgba(0,0,0,0)',\r\n                                            label: { show: false },\r\n                                            labelLine: { show: false }\r\n                                        },\r\n                                        emphasis: {\r\n                                            color: 'rgba(0,0,0,0)'\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ],\r\n                            itemStyle: {\r\n                                emphasis: {\r\n                                    shadowBlur: 10,\r\n                                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                } else {\r\n                    seriesArr = [];\r\n                }\r\n            }\r\n\r\n            return seriesArr;\r\n        }\r\n\r\n        function getRadius(index, min, max) {\r\n            const reg = /%+/;\r\n            let unit = reg.test(min) && reg.test(max) ? '%' : 0;\r\n            let interval = (parseFloat(max) - parseFloat(min)) / ctrl.data.length;\r\n            return [(interval * index + parseFloat(min) + unit), (interval * (index + 1) + parseFloat(min) + unit)];\r\n        }\r\n\r\n        this.events.on('render', function () {\r\n            render();\r\n            ctrl.renderingCompleted();\r\n        });\r\n    }\r\n}\r\n\r\nEchartsCtrl.templateUrl = 'module.html';\r\n"]}