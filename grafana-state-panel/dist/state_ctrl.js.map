{"version":3,"sources":["../src/state_ctrl.js"],"names":["_","MetricsPanelCtrl","panelDefaults","bgColor","StateCtrl","$scope","$injector","defaultsDeep","panel","events","on","onDataReceived","bind","onDataError","onInitEditMode","err","dataList","data","transform","render","that","map","item","state","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"state_ctrl.js","sourcesContent":["import _ from 'lodash';\r\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\r\nimport './css/state-panel.css!';\r\n\r\nconst panelDefaults = {\r\n  // IS_POINT: true,\r\n  // url: '',\r\n  // request: '',\r\n  // updateInterval: 10000,\r\n  bgColor: [\r\n    \"linear-gradient(to bottom right, #3abac7, #a375b6)\",\r\n    \"linear-gradient(to bottom right, #fcd98d, #f3b65b)\",\r\n    \"linear-gradient(to bottom right, #ffb88c, #e5658f)\"\r\n  // ],\r\n  // stateColor: [\r\n  //   \"linear-gradient(to bottom right, #4acda5, #3f74c6)\",\r\n  //   \"linear-gradient(to bottom right, #3abac7, #a375b6)\",\r\n  //   \"linear-gradient(to bottom right, #ffb88c, #e5658f)\"\r\n  ]\r\n};\r\n\r\nexport class StateCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector) {\r\n    super($scope, $injector);\r\n\r\n    _.defaultsDeep(this.panel, panelDefaults);\r\n\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-error', this.onDataError.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n\r\n    // this.update();\r\n  }\r\n\r\n  onDataError(err) {\r\n    this.dataList = data[0].dataList;\r\n    this.transform(this.dataList);\r\n    this.render();\r\n  }\r\n\r\n  onDataReceived(data) {\r\n    if(data[0]) {\r\n      if(data[0].dataList){\r\n        this.dataList = data[0].dataList;\r\n      } else {\r\n        this.dataList = [{\"name\":\"网上银行\",\"state\":\"1\"},{\"name\":\"ITSM运维\",\"state\":\"2\"},{\"name\":\"财务管理\",\"state\":\"0\"},{\"name\":\"核心业务\",\"state\":\"1\"},{\"name\":\"柜面业务\",\"state\":\"2\"},{\"name\":\"二代支付\",\"state\":\"2\"},{\"name\":\"贷记卡\",\"state\":\"0\"},{\"name\":\"支付宝卡通\",\"state\":\"0\"},{\"name\":\"黄金交易\",\"state\":\"0\"},{\"name\":\"国际结算\",\"state\":\"0\"},{\"name\":\"跨境收付\",\"state\":\"0\"},{\"name\":\"电子汇票\",\"state\":\"0\"}];\r\n      }\r\n    } else {\r\n      this.dataList = [{\"name\":\"网上银行\",\"state\":\"1\"},{\"name\":\"ITSM运维\",\"state\":\"2\"},{\"name\":\"财务管理\",\"state\":\"0\"},{\"name\":\"核心业务\",\"state\":\"1\"},{\"name\":\"柜面业务\",\"state\":\"2\"},{\"name\":\"二代支付\",\"state\":\"2\"},{\"name\":\"贷记卡\",\"state\":\"0\"},{\"name\":\"支付宝卡通\",\"state\":\"0\"},{\"name\":\"黄金交易\",\"state\":\"0\"},{\"name\":\"国际结算\",\"state\":\"0\"},{\"name\":\"跨境收付\",\"state\":\"0\"},{\"name\":\"电子汇票\",\"state\":\"0\"}];\r\n    }\r\n    this.transform(this.dataList);\r\n    this.render();\r\n  }\r\n\r\n  transform(dataList) {\r\n    let that = this;\r\n    dataList.map(function(item){\r\n      item.bgColor = that.panel.bgColor[item.state%3];\r\n      // item.stateColor = that.panel.stateColor[item.state%3];\r\n    })\r\n  }\r\n\r\n  //post请求\r\n  // update() {\r\n  //   let that = this, xmlhttp;\r\n\r\n  //   if (window.XMLHttpRequest) {\r\n  //     xmlhttp = new XMLHttpRequest();\r\n  //   } else {\r\n  //     xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n  //   }\r\n\r\n  //   xmlhttp.onreadystatechange = function () {\r\n  //     if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n  //       that.dataList = JSON.parse(xmlhttp.responseText).dataList;\r\n  //       that.render();\r\n  //     } \r\n  //   }\r\n\r\n  //   if (that.panel.url && that.panel.request) {\r\n  //     xmlhttp.open(\"POST\", that.panel.url, true);\r\n  //     xmlhttp.send(that.panel.request);\r\n  //   }\r\n\r\n  //   this.$timeout(() => { this.update(); }, that.panel.updateInterval);\r\n  // }\r\n\r\n  onInitEditMode() {\r\n    // this.addEditorTab('Options', 'public/plugins/grafana-state-panel/editor.html', 2);\r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    this.events.on('render', () => {\r\n      // const $panelContainer = elem.find('.list-container');\r\n    });\r\n  }\r\n}\r\n\r\nStateCtrl.templateUrl = 'module.html';\r\n"]}