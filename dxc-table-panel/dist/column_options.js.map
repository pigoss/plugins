{"version":3,"sources":["../src/column_options.js"],"names":["columnOptionsTab","$q","uiSegmentSrv","restrict","scope","templateUrl","controller","ColumnOptionsCtrl","_","$","moment","angular","kbn","$scope","editor","activeStyleIndex","panelCtrl","ctrl","panel","unitFormats","getUnitFormats","colorModes","text","value","columnTypes","fontSizes","dateFormats","getColumnNames","table","map","columns","col","render","column","subItem","unit","newStyleRule","type","alias","decimals","headerColor","colors","colorMode","pattern","dateFormat","thresholds","styles","stylesCount","length","indexToInsert","last","splice","style","without","index","ref","copy"],"mappings":"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","file":"column_options.js","sourcesContent":["import _ from 'lodash';\r\nimport $ from 'jquery';\r\nimport moment from 'moment';\r\nimport angular from 'angular';\r\n\r\nimport kbn from 'app/core/utils/kbn';\r\n\r\nexport class ColumnOptionsCtrl {\r\n  /** @ngInject */\r\n  constructor($scope, $q, uiSegmentSrv) {\r\n    $scope.editor = this;\r\n    this.activeStyleIndex = 0;\r\n    this.panelCtrl = $scope.ctrl;\r\n    this.panel = this.panelCtrl.panel;\r\n    this.unitFormats = kbn.getUnitFormats();\r\n    this.colorModes = [\r\n      {text: '无', value: null},\r\n      {text: '单元格', value: 'cell'},\r\n      {text: '内容', value: 'value'},\r\n      {text: '行', value: 'row'},\r\n      {text: '状态点', value: 'statePoint'}\r\n    ];\r\n    this.columnTypes = [\r\n      {text: '百分百', value: 'percentage'},\r\n      {text: '数字', value: 'number'},\r\n      {text: '文字', value: 'string'},\r\n      {text: '日期', value: 'date'},\r\n      {text: '隐藏', value: 'hidden'}\r\n    ];\r\n    this.fontSizes = ['80%', '90%', '100%', '110%', '120%', '130%', '150%', '160%', '180%', '200%', '220%', '250%'];\r\n    this.dateFormats = [\r\n      {text: 'YYYY-MM-DD HH:mm:ss', value: 'YYYY-MM-DD HH:mm:ss'},\r\n      {text: 'MM/DD/YY h:mm:ss a', value: 'MM/DD/YY h:mm:ss a'},\r\n      {text: 'MMMM D, YYYY LT',  value: 'MMMM D, YYYY LT'},\r\n    ];\r\n\r\n    this.getColumnNames = () => {\r\n      if (!this.panelCtrl.table) {\r\n        return [];\r\n      }\r\n      return _.map(this.panelCtrl.table.columns, function(col) {\r\n        return col.text;\r\n      });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    this.panelCtrl.render();\r\n  }\r\n\r\n  setUnitFormat(column, subItem) {\r\n    column.unit = subItem.value;\r\n    this.panelCtrl.render();\r\n  }\r\n\r\n  addColumnStyle() {\r\n    var newStyleRule = {\r\n      unit: 'short',\r\n      type: 'number',\r\n      alias: '',\r\n      decimals: 2,\r\n      headerColor: \"rgba(51, 181, 229, 1)\",\r\n      colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\r\n      colorMode: null,\r\n      pattern: '',\r\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\r\n      thresholds: [],\r\n    };\r\n\r\n    var styles = this.panel.styles;\r\n    var stylesCount = styles.length;\r\n    var indexToInsert = stylesCount;\r\n\r\n    // check if last is a catch all rule, then add it before that one\r\n    if (stylesCount > 0) {\r\n      var last = styles[stylesCount-1];\r\n      if (last.pattern === '/.*/') {\r\n        indexToInsert = stylesCount-1;\r\n      }\r\n    }\r\n\r\n    styles.splice(indexToInsert, 0, newStyleRule);\r\n    this.activeStyleIndex = indexToInsert;\r\n  }\r\n\r\n  removeColumnStyle(style) {\r\n    this.panel.styles = _.without(this.panel.styles, style);\r\n  }\r\n\r\n  invertColorOrder(index) {\r\n    var ref = this.panel.styles[index].colors;\r\n    var copy = ref[0];\r\n    ref[0] = ref[2];\r\n    ref[2] = copy;\r\n    this.panelCtrl.render();\r\n  }\r\n}\r\n\r\n/** @ngInject */\r\nexport function columnOptionsTab($q, uiSegmentSrv) {\r\n  'use strict';\r\n  return {\r\n    restrict: 'E',\r\n    scope: true,\r\n    templateUrl: 'public/plugins/dxc-table-panel/column_options.html',\r\n    controller: ColumnOptionsCtrl,\r\n  };\r\n}\r\n"]}