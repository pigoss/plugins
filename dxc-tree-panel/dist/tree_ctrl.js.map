{"version":3,"sources":["../src/tree_ctrl.js"],"names":["_","MetricsPanelCtrl","panelDefaults","TreeCtrl","$scope","$injector","defaultsDeep","panel","events","on","onDataReceived","bind","onDataError","onInitEditMode","USE","fakeData","that","setTimeout","updateData","render","xmlhttp","window","XMLHttpRequest","ActiveXObject","onreadystatechange","readyState","status","UrlData","JSON","parse","responseText","url","request","open","send","$timeout","updateInterval","dataList","eval","data","addEditorTab","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"tree_ctrl.js","sourcesContent":["import _ from 'lodash';\r\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\r\n\r\n\r\nconst panelDefaults = {\r\n\r\n};\r\n\r\nexport class TreeCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector) {\r\n    super($scope, $injector);\r\n\r\n    _.defaultsDeep(this.panel, panelDefaults);\r\n\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-error', this.onDataError.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n\r\n    // this.update();\r\n      if (this.panel.USE === 'FAKE_DATA' && this.panel.fakeData) {\r\n            let that = this;\r\n            setTimeout(function () {\r\n                that.onDataReceived(that.panel.fakeData);\r\n            }, 500);\r\n        } else {\r\n            this.updateData();\r\n        }\r\n  }\r\n\r\n  onDataError() {\r\n    this.render();\r\n  }\r\n\r\n    //post请求\r\n    updateData() {\r\n        let that = this, xmlhttp;\r\n\r\n        if (window.XMLHttpRequest) {\r\n            xmlhttp = new XMLHttpRequest();\r\n        } else {\r\n            xmlhttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        }\r\n\r\n        xmlhttp.onreadystatechange = function () {\r\n            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n                that.UrlData = JSON.parse(xmlhttp.responseText);\r\n                that.onDataReceived();\r\n            }\r\n        };\r\n\r\n        if (that.panel.USE === 'URL' && that.panel.url && that.panel.request) {\r\n            xmlhttp.open(\"POST\", that.panel.url, true);\r\n            xmlhttp.send(that.panel.request);\r\n        } else {\r\n            xmlhttp = null;\r\n        }\r\n\r\n        this.$timeout(() => { this.updateData(); }, that.panel.updateInterval);\r\n    } \r\n\r\n  onDataReceived(dataList) {\r\n  this.dataList = this.panel.USE === 'URL' ? this.UrlData : dataList;\r\n\r\n        if (this.panel.USE === 'FAKE_DATA' && this.panel.fakeData) {\r\n            this.dataList = eval(this.panel.fakeData); // jshint ignore:line\r\n        }\r\n        this.data = this.dataList;\r\n        this.render();\r\n  }\r\n\r\n  \r\n\r\n  onInitEditMode() {\r\n       this.addEditorTab('数据配置', 'public/plugins/dxc-tree-panel/editer-metric.html', 2);\r\n  \r\n  }\r\n\r\n  link(scope, elem, attrs, ctrl) {\r\n    this.events.on('render', () => {\r\n    });\r\n  }\r\n}\r\n\r\nTreeCtrl.templateUrl = 'module.html';\r\n"]}